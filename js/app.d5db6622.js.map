{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/app/components/main_nav/index.jsx","webpack:///./js/app/utils/local_storage/index.js","webpack:///./js/app/integrations/nextbus/index.js","webpack:///./js/app/components/loader/index.jsx","webpack:///./js/app/components/time_since_last_updated/index.jsx","webpack:///./js/app/components/error_message/index.jsx","webpack:///./js/app/components/bus/stop_info/index.jsx","webpack:///./js/app/components/bus/predictions/times/index.jsx","webpack:///./js/app/components/bus/route_stop_card/index.jsx","webpack:///./js/app/components/bus/predictions/index.jsx","webpack:///./js/app/components/bus/add_stop_form/manual_add/index.jsx","webpack:///./js/app/components/bus/add_stop_form/geolocate_add/index.jsx","webpack:///./js/app/components/bus/add_stop_form/index.jsx","webpack:///./js/app/components/bus/edit_togglers/index.jsx","webpack:///./js/app/components/bus/route_stop_removal/index.jsx","webpack:///./js/app/components/bus/index.jsx","webpack:///./js/app/integrations/darksky/index.js","webpack:///./js/app/components/weather/side_panel/todays_rain_forecast/index.jsx","webpack:///./js/app/constants/index.js","webpack:///./js/app/components/weather/icon/index.jsx","webpack:///./js/app/components/weather/side_panel/todays_forecast_overview/index.jsx","webpack:///./js/app/components/weather/side_panel/alerts/index.jsx","webpack:///./js/app/components/weather/side_panel/index.jsx","webpack:///./js/app/components/weather/hourly_forecast/index.jsx","webpack:///./js/app/components/weather/three_day_forecast/index.jsx","webpack:///./js/app/components/weather/index.jsx","webpack:///./js/app/components/main_page/current_datetime_header/index.jsx","webpack:///./js/app/components/main_page/index.jsx","webpack:///./js/app/components/settings_page/dark_light_mode_selector/index.jsx","webpack:///./js/app/components/settings_page/display_local_storage_data/index.jsx","webpack:///./js/app/components/settings_page/set_sample_local_storage_data/index.jsx","webpack:///./js/app/components/settings_page/index.jsx","webpack:///./js/app/index.jsx","webpack:///./index.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MainNav","className","this","props","classNames","to","PureComponent","T","string","WEATHER_KEY_KEY","WEATHER_UNITS_KEY","BUS_ROUTE_STOP_TAGS_KEY","HTML_CLASS_KEY","ALL_SETTINGS_KEYS","reduce","fullArray","SAMPLE_DATA","LocalStorage","JSON","parse","localStorage","getItem","val","setItem","stringify","dispatchEvent","Event","set","forEach","removeItem","routeStopTag","routeStopTags","getBusStopsFromLocalStorage","Set","filter","tag","URL","getUserPosition","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","NextBus","axios","params","command","a","stops","useShortTitles","paramsSerializer","qs","arrayFormat","response","parsePredictionsXMLResponse","errorText","body","Error","__text","parseRouteConfigXMLResponse","mergeRouteData","route","meters","all","getRouteConfig","responses","geoLocation","routeConfig","currPosition","google","maps","LatLng","coords","latitude","longitude","stopResults","direction","stop","stopLatLng","_lat","_lon","geometry","spherical","computeDistanceBetween","_tag","title","_title","directionName","_name","directionTitle","latLng","stopId","_stopId","stopTag","stopTitle","getPredictions","predictions","xmlString","X2JS","arrayAccessFormPaths","xml2js","routeTag","split","routeData","stopTags","idx","Loader","loading","small","bool","TimeSinceLastUpdated","lastUpdated","timeAgo","formatDistanceStrict","Date","roundingMethod","msUntilWarning","differenceInMilliseconds","interval","setInterval","forceUpdate","clearInterval","overdue","isOverdue","getReadableTime","number","ErrorMessage","children","node","StopInfo","prediction","_dirTitleBecauseNoPredictions","_stopTitle","shape","Times","predictionTimes","map","time","_tripTag","_affectedByLayover","_minutes","arrayOf","RouteStopCard","Card","CardBody","isRequired","Predictions","_routeTag","_stopTag","ManualAdd","event","field","setState","target","preventDefault","onAddOrRemoveStop","state","getRouteStopTag","stopIsValid","undefined","isValidStop","addBusStopToLocalStorage","Form","onSubmit","validateAndAddStop","Row","Col","xs","FormGroup","Label","for","Input","type","id","onChange","e","placeholder","Button","color","func","GeolocateAdd","getStopsNearMe","nearbyStops","errMsg","console","error","message","Alert","fade","href","rel","inline","getNearbyStops","Table","striped","hover","nearbyStop","onClick","addStop","AddStopForm","tab","activeTab","toggleAddStopForm","Nav","tabs","NavItem","NavLink","active","toggle","TabContent","TabPane","tabId","buttonProps","size","outline","EditTogglers","showBusRemove","toggleShowBusRemove","RouteStopRemoval","removeBusStopFromLocalStorage","splitRouteStopTag","removeStop","sortPredictions","sortedList","indexOf","Bus","showAddStopForm","updateBusPredictions","predictionResponse","CALL_INTERVAL","DarkSky","lat","long","units","getUrl","adapter","jsonpAdapter","locations","darkSkyUnits","convertUnitsForDarkSky","fetchWeatherData","base","exclude","lang","TodaysRainForecast","hourlyForecasts","find","hourlyForecast","precipProbability","firstRainForecast","getFirstRainForecast","toFixed","format","DARK_SKY_ICON_MAP","cloudy","fog","rain","sleet","snow","wind","WeatherIcon","iconName","icon","src","alt","cToF","celsius","fToC","fahrenheit","TodaysForecastOverview","weatherUnits","todaysForecast","temperatureMin","temperatureMax","fn","summary","getAltHighLow","Alerts","alerts","alert","SidePanel","dailyForecasts","array","HourlyForecast","data-toggle","temperature","uvIndex","humidity","apparentTemperature","ThreeDayForecast","dailyForecast","sm","LOCATIONS","readable","Weather","fetchAllLocationsWeatherData","locationsResponses","locationResponse","hourly","daily","fetchError","updateWeatherLocations","location","CardHeader","md","CardFooter","CurrentDateTimeHeader","now","date","MainPage","lg","MODES","DarkLightModeSelector","document","documentElement","setMode","isDarkModeSelected","ButtonGroup","DisplayLocalStorageData","show","addEventListener","rerender","removeEventListener","localStorageKey","codeString","getLocalStorageData","toggleShow","language","style","monokai","oneOf","SetSampleLocalStorageData","setSampleData","keys","Settings","weatherKeyIsValid","weatherKeyValue","isValidKey","getInitialState","dump","dumpLocalStorageAndResetState","validateAndSetKey","onWeatherKeyChange","setWeatherUnits","App","Container","path","ReactDOM","render","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,opBCjJY0C,E,qIASV,IACCC,EAAcC,KAAKC,MAAnBF,UACR,OACE,yBAAKA,UAAWG,IAAWH,EAAW,WACpC,kBAAC,IAAD,CAAMI,GAAG,KAAI,0BAAMJ,UAAU,iBAC7B,kBAAC,IAAD,CAAMI,GAAG,aAAY,0BAAMJ,UAAU,qB,GAdRK,iB,IAAhBN,E,YACA,CACjBC,UAAWM,YAAEC,S,IAFIR,E,eAKG,CACpBC,UAAW,K,4GCXFQ,EAAkB,aAClBC,EAAoB,eACpBC,EAA0B,gBAC1BC,EAAiB,YACjBC,EAAoB,CAC/BJ,EACAC,EACAC,EACAC,GACAE,QAEA,SAACC,EAAWzB,GAAZ,oBAAyByB,GAAzB,CAAoCzB,EAApC,UAZ0C,cAY1C,OAA2EA,OAC3E,IAGW0B,EAAc,OACxBL,EAA0B,CAAC,UAAW,UAAW,UAAW,YAG1CM,E,iFACR3B,GACT,OAAO4B,KAAKC,MACVtB,OAAOuB,aAAaC,QAAQ/B,IAE5BO,OAAOuB,aAAaC,QAApB,UAzBsC,cAyBtC,OAA8D/B,MAC1D,K,0BAGGA,EAAKgC,GACdzB,OAAOuB,aAAaG,QAAQjC,EAAK4B,KAAKM,UAAUF,IAIhDzB,OAAO4B,cAAc,IAAIC,MAAM,c,oCAGZpC,GACnBY,KAAKyB,IAAIrC,EAAK0B,EAAY1B,M,6BAI1BuB,EAAkBe,SAAQ,SAAAtC,GAAG,OAAIO,OAAOuB,aAAaS,WAAWvC,Q,oDAIhE,OAAOY,KAAKtB,IAAI+B,IAA4B,K,+CAGdmB,GAC9B,IAAMC,EAAgB7B,KAAK8B,8BAC3B9B,KAAKyB,IACHhB,EADF,IAEM,IAAIsB,IAAJ,cAAYF,GAAZ,CAA2BD,S,oDAIEA,GACnC,IAAMC,EAAgB7B,KAAK8B,8BAC3B9B,KAAKyB,IACHhB,EACAoB,EAAcG,QAAO,SAAAC,GAAG,OAAIA,IAAQL,U,yECxD7BM,GAAM,uDAENC,GAAkB,SAAAC,GAAO,OACpC,IAAIC,SAAQ,SAACC,EAASC,GACpBC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQH,OAIzCO,G,2HACSd,G,yFACHe,IAAMlE,IAAIwD,GAAK,CACpCW,OAAQ,CACNC,QAAS,2BACTC,EAAG,UACHC,MAAOnB,EACPoB,gBAAgB,GAElBC,iBAAkB,SAAAL,GAAM,OAAIM,IAAG7B,UAAUuB,EAAQ,CAAEO,YAAa,c,cAP5DC,E,OAUArH,EAAOgE,KAAKsD,4BAA4BD,EAASrH,M,kBAEhD,IAAIqG,SAAQ,SAACC,EAASC,GAAW,QAChCgB,EAAYvH,SAAH,UAAGA,EAAMwH,YAAT,iBAAG,EAAYC,aAAf,aAAG,EAAmBC,OACjCH,GAAahB,EAAO,IAAIkB,MAAMF,IAElCjB,EAAQtG,O,wPAKa4G,IAAMlE,IAAIwD,GAAK,CACpCW,OAAQ,CACNC,QAAS,cACTC,EAAG,UACHE,gBAAgB,K,cAJdI,E,OAQArH,EAAOgE,KAAK2D,4BAA4BN,EAASrH,M,kBAEhD,IAAIqG,SAAQ,SAACC,EAASC,GAAW,QAChCgB,EAAYvH,SAAH,UAAGA,EAAMwH,YAAT,iBAAG,EAAYC,aAAf,aAAG,EAAmBC,OACjCH,GAAahB,EAAO,IAAIkB,MAAMF,IAElCjB,EAAQ,EAAKsB,eAAe5H,EAAKwH,KAAKK,Y,qJAIdC,G,iGACFlB,IAAMmB,IAAI,CAChC5B,KACAnC,KAAKgE,mB,cAFDC,E,aAK6BA,E,GAA5BC,E,KAAaC,E,KAEdC,EAAe,IAAIC,OAAOC,KAAKC,OACnCL,EAAYM,OAAOC,SACnBP,EAAYM,OAAOE,WAGfC,EAAc,GACpBR,EAAYzC,SAAQ,SAAAmC,GAClBA,EAAMe,UAAUlD,SAAQ,SAAAkD,GACtBA,EAAUC,KAAKnD,SAAQ,SAAAmD,GAErB,IAAMC,EAAa,IAAIT,OAAOC,KAAKC,OAAOM,EAAKE,KAAMF,EAAKG,MACzCX,OAAOC,KAAKW,SAASC,UACnCC,uBAAuBf,EAAcU,IAExBhB,GACda,EAAY7H,KAAK,CACfmF,IAAK4B,EAAMuB,KACXC,MAAOxB,EAAMyB,OAEbC,cAAeX,EAAUY,MACzBC,eAAgBb,EAAUU,OAE1BI,OAAQZ,EAERa,OAAQd,EAAKe,QACbC,QAAShB,EAAKO,KACdU,UAAWjB,EAAKS,kB,kBAOnBX,G,mJAmCgB/C,G,kGAEE5B,KAAK+F,eAAe,CAACnE,I,cAAtCyB,E,4BACGA,SAAD,UAACA,EAAUG,YAAX,aAAC,EAAgBwC,c,0DAElB,G,yJAIwBC,GACjC,OAAO,IAAIC,IAAK,CACdC,qBAAsB,CACpB,mBACA,2CAEDC,OAAOH,K,kDAGuBA,GACjC,OAAO,IAAIC,IAAK,CACdC,qBAAsB,CACpB,gBAEDC,OAAOH,K,sCAGWI,EAAUR,GAC/B,gBAAUQ,EAAV,YAAsBR,K,wCAGCjE,GACvB,OAAOA,EAAa0E,MAAM,S,SApJT3D,G,kBAqFK,SAAA4D,GA6BtB,OAfAA,EAAU7E,SAAQ,SAAAmC,GAEhB,IAAM2C,EAAW,GACjB3C,EAAMgB,KAAKnD,SAAQ,SAAAmD,GACjB2B,EAAS3B,EAAKO,MAAQP,KAIxBhB,EAAMe,UAAUlD,SAAQ,SAAAkD,GACtBA,EAAUC,KAAKnD,SAAQ,SAACmD,EAAM4B,GAE5B7B,EAAUC,KAAK4B,GAAOD,EAAS3B,EAAKO,eAInCmB,K,ocC1HUG,G,sIAaV,MAC+B1G,KAAKC,MAAnCF,EADD,EACCA,UAAW4G,EADZ,EACYA,QAASC,EADrB,EACqBA,MAE5B,OAAKD,EAGH,yBAAK5G,UAAWG,IAAWH,EAAW,UAAW,CAAE,gBAAiB6G,KAClE,yBAAK7G,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,aANI,S,GAhBSK,iB,6aAAfsG,G,YACA,CACjB3G,UAAWM,YAAEC,OACbqG,QAAStG,YAAEwG,KACXD,MAAOvG,YAAEwG,O,IAJQH,G,eAOG,CACpB3G,UAAW,GACX4G,SAAS,EACTC,OAAO,ICPJ,IAEcE,G,gNAuBD,WAAM,IACdC,EAAgB,EAAK9G,MAArB8G,YACFC,EAAUC,aAAqBF,EAAa,IAAIG,KAAQ,CAAEC,eAAgB,UAIhF,MAAgB,cAAZH,EACK,YAET,UAAUA,EAAV,Y,wBAGU,WAAM,MACwB,EAAK/G,MAArC8G,EADQ,EACRA,YAAaK,EADL,EACKA,eAErB,QAAKL,GAEEM,aAAyB,IAAIH,KAAQH,IAAgBK,K,0DAzB1C,WAClBpH,KAAKsH,SAAWC,aAAY,kBAAM,EAAKC,gBAlBhB,O,6CAsBvBC,cAAczH,KAAKsH,Y,+BAuBZ,MACqCtH,KAAKC,MAAzCF,EADD,EACCA,UAAWgH,EADZ,EACYA,YAAaJ,EADzB,EACyBA,QAE1Be,EAAU1H,KAAK2H,YAErB,OACE,yBAAK5H,UAAWG,IAAWH,EAAW,4BACpC,0BAAMA,UAAWG,IAAW,CAAEwH,aAC3BX,GAAe/G,KAAK4H,mBAEvB,kBAAC,GAAD,CAAQ7H,UAAU,eAAe4G,QAASA,EAASC,OAAK,S,GArDdxG,iB,6aAA7B0G,G,YACA,CACjB/G,UAAWM,YAAEC,OACbyG,YAAa1G,YAAEd,OACf6H,eAAgB/G,YAAEwH,OAClBlB,QAAStG,YAAEwG,O,IALMC,G,eAQG,CACpB/G,UAAW,GACXgH,YAAa,KACbK,eAAgB,IAChBT,SAAS,I,ICjBQmB,G,sIAUV,MACyB9H,KAAKC,MAA7BF,EADD,EACCA,UAAWgI,EADZ,EACYA,SAEnB,OAAKA,EAGH,yBAAKhI,UAAWG,IAAWH,EAAW,kBACpC,0BAAMA,UAAU,mCAChB,8BACGgI,IANiB,S,GAbc3H,iB,6aAArB0H,G,YACA,CACjB/H,UAAWM,YAAEC,OACbyH,SAAU1H,YAAE2H,O,IAHKF,G,eAMG,CACpB/H,UAAW,K,ICPMkI,G,sIAiBV,MAC2BjI,KAAKC,MAA/BF,EADD,EACCA,UAAWmI,EADZ,EACYA,WACXtD,EAAyDsD,EAAzDtD,UAAWuD,EAA8CD,EAA9CC,8BAA+BC,EAAeF,EAAfE,WAElD,OACE,yBAAKrI,UAAWG,IAAWH,IACzB,yBAAKA,UAAU,qBACZ6E,aAAA,EAAAA,EAAWU,SAAU6C,GAExB,iCACIC,Q,GA3B0BhI,iB,6aAAjB6H,G,YACA,CACjBlI,UAAWM,YAAEC,OACb4H,WAAY7H,YAAEgI,MAAM,CAClBzD,UAAWvE,YAAEgI,MAAM,CACjB/C,OAAQjF,YAAEC,SAEZ8H,WAAY/H,YAAEC,OACd6H,8BAA+B9H,YAAEC,W,IARlB2H,G,eAYG,CACpBlI,UAAW,GACXmI,WAAY,K,ICdKI,G,sIAiBV,MACgCtI,KAAKC,MAApCF,EADD,EACCA,UAAWwI,EADZ,EACYA,gBAEnB,OACE,yBAAKxI,UAAWG,IAAWH,EAAW,qBACnCwI,EAAgB/L,OACf,oCACG+L,EAAgB1I,MAAM,EAAG,GAAG2I,KAAI,SAACC,EAAMhC,GAAP,OAC/B,0BAAMrH,IAAG,UAAKqJ,EAAKC,WACjB,0BACE3I,UAAWG,IACT,kBACA,CACE,2BAA4BuI,EAAKE,mBACjC,YAAqB,IAARlC,EACb,aAAsB,IAARA,KAIC,MAAlBgC,EAAKG,SAAmB,MAAQH,EAAKG,UAEvCnC,IAAS8B,EAAgB/L,OAAS,GAAM,UAK/C,0BAAMuD,UAAU,sBAAhB,a,GA3CyBK,iB,6aAAdkI,G,YACA,CACjBvI,UAAWM,YAAEC,OACbiI,gBAAiBlI,YAAEwI,QACjBxI,YAAEgI,MAAM,CACNK,SAAUrI,YAAEC,OACZqI,mBAAoBtI,YAAEC,OACtBsI,SAAUvI,YAAEC,Y,IAPCgI,G,eAYG,CACpBvI,UAAW,GACXwI,gBAAiB,K,ICbAO,G,sIAWV,MACmC9I,KAAKC,MAAvCF,EADD,EACCA,UAAWsG,EADZ,EACYA,SAAU0B,EADtB,EACsBA,SAE7B,OACE,kBAACgB,EAAA,EAAD,CAAMhJ,UAAWG,IAAWH,EAAW,SACrC,kBAACiJ,EAAA,EAAD,CAAUjJ,UAAU,qDAClB,yBAAKA,UAAU,aACZsG,GAGH,yBAAKtG,UAAU,qBACZgI,S,GAtB8B3H,iB,6aAAtB0I,G,YACA,CACjB/I,UAAWM,YAAEC,OACb+F,SAAUhG,YAAEC,OAAO2I,WACnBlB,SAAU1H,YAAE2H,KAAKiB,a,IAJAH,G,eAOG,CACpB/I,UAAW,K,ICLMmJ,G,sIAyBV,MAC4BlJ,KAAKC,MAAhCF,EADD,EACCA,UAAWiG,EADZ,EACYA,YAEnB,OACE,yBAAKjG,UAAWG,IAAWH,IACxBiG,EAAYwC,KAAI,SAAAN,GAAc,IACrBiB,EAAmCjB,EAAnCiB,UAAWC,EAAwBlB,EAAxBkB,SAAUxE,EAAcsD,EAAdtD,UAC7B,OACE,kBAAC,GAAD,CAAeyB,SAAU8C,EAAW/J,IAAG,UAAK+J,EAAL,YAAkBC,IACvD,kBAAC,GAAD,CAAOb,gBAAiB3D,aAAF,EAAEA,EAAWsD,aACnC,kBAAC,GAAD,CAAUA,WAAYA,a,GAnCK9H,iB,IAApB8I,G,YACA,CACjBnJ,UAAWM,YAAEC,OACb0F,YAAa3F,YAAEwI,QACbxI,YAAEgI,MAAM,CACNc,UAAW9I,YAAEC,OACb8I,SAAU/I,YAAEC,OACZsE,UAAWvE,YAAEgI,MAAM,CACjBH,WAAY7H,YAAEwI,QACZxI,YAAEgI,MAAM,CACNK,SAAUrI,YAAEC,OACZqI,mBAAoBtI,YAAEC,OACtBsI,SAAUvI,YAAEC,iB,IAZL4I,G,eAoBG,CACpBnJ,UAAW,GACXiG,YAAa,K,qhBCtBIqD,G,iCAUnB,WAAYpJ,GAAO,yBACjB,cAAMA,GADW,uBASR,SAACqJ,EAAOC,GACjB,EAAKC,SAAL,OAAiBD,EAAQD,EAAMG,OAAO3K,WAVrB,+DAaE,WAAMwK,GAAN,uBAAAvG,EAAA,6DACnBuG,EAAMI,iBACEC,EAAsB,EAAK1J,MAA3B0J,kBAFW,EAGW,EAAKC,MAA3BvD,EAHW,EAGXA,SAAUR,EAHC,EAGDA,QACZjE,EAAee,GAAQkH,gBAAgBxD,EAAUR,GACvD,EAAK2D,SAAS,CAAEM,iBAAaC,IALV,SAOTpH,GAAQqH,YAAYpI,GAPX,0CAQjB,EAAK4H,SAAS,CAAEM,aAAa,IAC7B/I,EAAakJ,yBAAyBrI,GACtC+H,IAViB,2BAcnB,EAAKH,SAAS,CAAEM,aAAa,IAdV,4CAbF,uDAEjB,EAAKF,MAAQ,CACXvD,SAAU,GACVR,QAAS,GACTiE,iBAAaC,GALE,E,6CA8BV,WACChK,EAAcC,KAAKC,MAAnBF,UADD,EAEoCC,KAAK4J,MAAxCvD,EAFD,EAECA,SAAUR,EAFX,EAEWA,QAASiE,EAFpB,EAEoBA,YAE3B,OACE,kBAACI,GAAA,EAAD,CAAMC,SAAUnK,KAAKoK,mBAAoBrK,UAAWG,IAAWH,IAC7D,kBAACsK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,wBAAX,cACA,kBAACC,GAAA,EAAD,CACEC,KAAK,OACLC,GAAG,uBACH9K,UAAWG,IACT,CACE,WAAY4J,EACZ,cAA8B,IAAhBA,IAGlBgB,SAAU,SAAAC,GAAC,OAAI,EAAKD,SAASC,EAAG,aAChCC,YAAY,KACZlM,MAAOuH,MAIb,kBAACiE,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,yBAAX,aACA,kBAACC,GAAA,EAAD,CACEC,KAAK,OACLC,GAAG,wBACH9K,UAAWG,IACT,CACE,WAAY4J,EACZ,cAA8B,IAAhBA,IAGlBgB,SAAU,SAAAC,GAAC,OAAI,EAAKD,SAASC,EAAG,YAChCC,YAAY,OACZlM,MAAO+G,OAKf,6BACE,kBAACoF,GAAA,EAAD,CAAQC,MAAM,UAAUN,KAAK,UAA7B,6B,GArF6BxK,iB,IAAlBiJ,G,YACA,CACjBtJ,UAAWM,YAAEC,OACbqJ,kBAAmBtJ,YAAE8K,KAAKlC,a,IAHTI,G,eAMG,CACpBtJ,UAAW,K,qcCLMqL,G,iCAUnB,WAAYnL,GAAO,yBACjB,cAAMA,GADW,2DASF,WAAMqJ,GAAN,iBAAAvG,EAAA,yDACTe,EAASwF,EAAMG,OAAO3K,MADb,wDAIf,EAAK0K,SAAS,CAAE7C,SAAS,IAJV,kBAMahE,GAAQ0I,eAAevH,GANpC,OAMPwH,EANO,OAOb,EAAK9B,SAAS,CACZ7C,SAAS,EACT4E,YAAQxB,EACRuB,gBAVW,kDAabE,QAAQC,MAAM,KAAEC,SAChB,EAAKlC,SAAS,CACZ7C,SAAS,EACT4E,OAAQ,KAAEG,UAhBC,0DATE,6EA8BT,SAAA9J,GAAgB,IAChB+H,EAAsB,EAAK1J,MAA3B0J,kBAER5I,EAAakJ,yBAAyBrI,GACtC+H,OAhCA,EAAKC,MAAQ,CACXjD,SAAS,EACT4E,YAAQxB,EACRuB,YAAa,IALE,E,6CAqCV,WACCvL,EAAcC,KAAKC,MAAnBF,UADD,EAEkCC,KAAK4J,MAAtCjD,EAFD,EAECA,QAAS4E,EAFV,EAEUA,OAAQD,EAFlB,EAEkBA,YAEzB,OACE,oCACE,kBAACK,GAAA,EAAD,CAAOT,MAAM,SAASU,MAAM,GAA5B,iBACiB,QADjB,2CACmE,IACjE,uBACEC,KAAK,wFACLpC,OAAO,SACPqC,IAAI,uBAHN,+DAFF,4FASc,YATd,wBAYA,kBAAC5B,GAAA,EAAD,CAAMnK,UAAWG,IAAWH,EAAW,QAASgM,QAAM,GACpD,kBAACtB,GAAA,EAAD,CAAO1K,UAAU,QAAjB,qBACA,kBAAC4K,GAAA,EAAD,CAAOC,KAAK,SAASE,SAAU9K,KAAKgM,gBAElC,4BAAQlN,MAAM,IAAd,kBACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,aAEF,kBAAC,GAAD,CAAQiB,UAAU,OAAO4G,QAASA,KAGpC,kBAAC,GAAD,KAAe4E,KAEZD,EAAY9O,QACb,kBAACyP,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACpM,UAAU,QAC7B,+BACE,4BACE,qCACA,yCACA,sCAGJ,+BACGuL,EAAY9C,KAAI,SAAA4D,GAAc,IACrBnK,EAAmDmK,EAAnDnK,IAAK4D,EAA8CuG,EAA9CvG,QAASR,EAAqC+G,EAArC/G,MAAOI,EAA8B2G,EAA9B3G,eAAgBK,EAAcsG,EAAdtG,UACvClE,EAAee,GAAQkH,gBAAgB5H,EAAK4D,GAElD,OACE,wBACE9F,UAAU,YACVX,IAAKwC,EACLyK,QAAS,kBAAM,EAAKC,QAAQ1K,KAE5B,4BAAKyD,GACL,4BAAKI,GACL,4BAAKK,c,GArGiB1F,iB,6aAArBgL,G,YACA,CACjBrL,UAAWM,YAAEC,OACbqJ,kBAAmBtJ,YAAE8K,KAAKlC,a,IAHTmC,G,eAMG,CACpBrL,UAAW,K,ICTMwM,G,iCAWnB,WAAYtM,GAAO,yBACjB,cAAMA,GADW,qBAOV,SAAAuM,GACe,EAAK5C,MAAnB6C,YACUD,GAChB,EAAKhD,SAAS,CACZiD,UAAWD,OATf,EAAK5C,MAAQ,CACX6C,UAAW,KAHI,E,6CAgBV,aACqDzM,KAAKC,MAAzDF,EADD,EACCA,UAAW2M,EADZ,EACYA,kBAAmB/C,EAD/B,EAC+BA,kBAC9B8C,EAAczM,KAAK4J,MAAnB6C,UAER,OACE,yBAAK1M,UAAWG,IAAWH,EAAW,WAAY,SAChD,kBAAC4M,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE/M,UAAWG,IAAW,YAAa,CAAE6M,OAAsB,MAAdN,IAC7CJ,QAAS,kBAAM,EAAKW,OAAO,OAF7B,gBAOF,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE/M,UAAWG,IAAW,YAAa,CAAE6M,OAAsB,MAAdN,IAC7CJ,QAAS,kBAAM,EAAKW,OAAO,OAF7B,iBAOF,4BAAQpC,KAAK,SAAS7K,UAAU,iBAAiBsM,QAASK,GACxD,0BAAM3M,UAAU,mBAGpB,kBAACkN,GAAA,EAAD,CAAYR,UAAWA,GACrB,kBAACS,GAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,CAAcxD,kBAAmBA,KAEnC,kBAACuD,GAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,CAAWxD,kBAAmBA,W,GA3DDvJ,iB,IAApBmM,G,YACA,CACjBxM,UAAWM,YAAEC,OACboM,kBAAmBrM,YAAE8K,KAAKlC,WAC1BU,kBAAmBtJ,YAAE8K,KAAKlC,a,IAJTsD,G,eAOG,CACpBxM,UAAW,K,icCTf,IAAMqN,GAAc,CAClBrN,UAAW,OACXsN,KAAM,KACNnC,MAAO,YACPoC,SAAS,GAGUC,G,sIAYV,MAMHvN,KAAKC,MAJPF,EAFK,EAELA,UACAyN,EAHK,EAGLA,cACAC,EAJK,EAILA,oBACAf,EALK,EAKLA,kBAEI7K,EAAgBd,EAAae,8BAEnC,OACE,yBAAK/B,UAAWG,IAAWH,EAAW,UAClCyN,GACA,kBAACvC,GAAA,EAAD,QAAYmC,GAAZ,CAAyBf,QAASK,IAChC,0BAAM3M,UAAU,mBAGjB8B,EAAcrF,QACf,kBAACyO,GAAA,EAAD,QAAYmC,GAAZ,CAAyBf,QAASoB,IAChC,0BAAM1N,UAAU,qB,GA9BcK,iB,6aAArBmN,G,YACA,CACjBxN,UAAWM,YAAEC,OACbkN,cAAenN,YAAEwG,KAAKoC,WACtBwE,oBAAqBpN,YAAE8K,KAAKlC,WAC5ByD,kBAAmBrM,YAAE8K,KAAKlC,a,IALTsE,G,eAQG,CACpBxN,UAAW,K,ICdM2N,G,2MAMN,SAACrH,EAAUR,GACtB,IAAMjE,EAAee,GAAQkH,gBAAgBxD,EAAUR,GAC/C8D,EAAsB,EAAK1J,MAA3B0J,kBAER5I,EAAa4M,8BAA8B/L,GAC3C+H,IACA,EAAKnC,iB,+CAIE,WACCzH,EAAcC,KAAKC,MAAnBF,UACF8B,EAAgBd,EAAae,8BAEnC,OACE,yBAAK/B,UAAWG,IAAWH,IACxB8B,EAAc2G,KAAI,SAAA5G,GAAgB,MACLe,GAAQiL,kBAAkBhM,GADrB,WAC1ByE,EAD0B,KAChBR,EADgB,KAGjC,OACE,kBAAC,GAAD,CAAeQ,SAAUA,EAAUjH,IAAKwC,GACtC,kBAACqJ,GAAA,EAAD,CACEC,MAAM,SACNmC,KAAK,KACLhB,QAAS,kBAAM,EAAKwB,WAAWxH,EAAUR,KAH3C,wB,GA3BgCzF,iB,6aAAzBsN,G,YACA,CACjB3N,UAAWM,YAAEC,OACbqJ,kBAAmBtJ,YAAE8K,KAAKlC,aCIvB,IAGM6E,GAAkB,SAACjM,GAAoC,IAArBmE,EAAqB,uDAAP,GACrD+H,EAAa,GAKnB,OAJA/H,EAAYtE,SAAQ,SAAAwG,GAClB,IAAMtG,EAAe,GAAH,OAAMsG,EAAWiB,UAAjB,YAA8BjB,EAAWkB,UAC3D2E,EAAWlM,EAAcmM,QAAQpM,IAAiBsG,KAE7C6F,GAGYE,G,mCASnB,WAAYhO,GAAO,yBACjB,cAAMA,GADW,gCAqBC,WAAM,IAChBiO,EAAoB,EAAKtE,MAAzBsE,gBACR,EAAK1E,SAAS,CAAE0E,iBAAkBA,OAvBjB,6CA0BC,sBAAAnL,EAAA,6DAClB0E,cAAc,EAAKH,UADD,SAEZ,EAAK6G,uBAFO,OAGlB,EAAK7G,SAAWC,YAAY,EAAK4G,qBAlDR,KA+CP,4CA1BD,kCAgCG,WAAM,IAClBX,EAAkB,EAAK5D,MAAvB4D,cACR,EAAKhE,SAAS,CAAEgE,eAAgBA,OAlCf,gDAqCI,8BAAAzK,EAAA,0DACflB,EAAgBd,EAAae,+BAGhBtF,OAJE,wDAMrB,EAAKgN,SAAS,CAAE7C,SAAS,IANJ,kBAQchE,GAAQoD,eAAelE,GARrC,OAQbuM,EARa,OAUnB,EAAK5E,SAAS,CACZxD,YAAa8H,GAAgBjM,EAAeuM,EAAmB5K,KAAKwC,aACpEW,SAAS,EACTI,YAAa,IAAIG,KACjBqE,YAAQxB,IAdS,kDAiBnByB,QAAQC,MAAM,KAAEC,SAChB,EAAKlC,SAAS,CACZ7C,SAAS,EACT4E,OAAQ,KAAEG,UApBO,2DAnCrB,EAAK9B,MAAQ,CACX5D,YAAa,GACbe,iBAAagD,EACbmE,iBAAiB,EACjBV,eAAe,EACf7G,SAAS,EACT4E,YAAQxB,GARO,E,uKAaX/J,KAAKmO,uB,OACXnO,KAAKsH,SAAWC,aAAY,kBAAM,EAAK4G,yBAnCd,K,0IAuCzB1G,cAAczH,KAAKsH,Y,+BA4CZ,IACCvH,EAAcC,KAAKC,MAAnBF,UADD,EASHC,KAAK4J,MANP5D,EAHK,EAGLA,YACAe,EAJK,EAILA,YACAmH,EALK,EAKLA,gBACAV,EANK,EAMLA,cACA7G,EAPK,EAOLA,QACA4E,EARK,EAQLA,OAGF,OACE,yBAAKxL,UAAWG,IAAWH,EAAW,SAClCwL,IAAWvF,EAAYxJ,QACvB,kBAACuM,EAAA,EAAD,CAAMhJ,UAAU,QACd,kBAACiJ,EAAA,EAAD,6BAMHwE,EACC,kBAAC,GAAD,CAAkB7D,kBAAmB3J,KAAK2J,oBAE1C,kBAAC,GAAD,CACE3D,YAAaA,IAIhBkI,GACC,kBAAC,GAAD,CACExB,kBAAmB1M,KAAK0M,kBACxB/C,kBAAmB3J,KAAK2J,qBAI1BuE,GACA,yBAAKnO,UAAU,oDACb,kBAAC,GAAD,CACE2M,kBAAmB1M,KAAK0M,kBACxBc,cAAeA,EACfC,oBAAqBzN,KAAKyN,sBAG5B,kBAAC,GAAD,CACE1G,YAAaA,EACbK,eAhIkBiH,IAiIlB1H,QAASA,KAKf,kBAAC,GAAD,KAAe4E,Q,GA3HUnL,iB,IAAZ6N,G,YACA,CACjBlO,UAAWM,YAAEC,S,IAFI2N,G,eAKG,CACpBlO,UAAW,K,4CC7BMuO,G,kNAYaC,E,EAAAA,IAAKC,E,EAAAA,KAAMpP,E,EAAAA,IAAKqP,E,EAAAA,M,SAGvB7L,IAAMlE,IAAIsB,KAAK0O,OAAO,CAAEH,MAAKC,OAAMpP,MAAKqP,UAAU,CACvEE,QAASC,O,cADLvL,E,yBAGCA,G,oKAGiCwL,EAAWzP,EAAKqP,G,uFAClDK,EAAe9O,KAAK+O,uBAAuBN,G,SACzB7L,IAAMmB,IAC5B8K,EAAUrG,KAAI,gBAAG+F,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OACZ,EAAKQ,iBAAiB,CAAET,MAAKC,OAAMpP,MAAKqP,MAAOK,Q,cAF7C7K,E,yBAKCA,G,6GA5BUqK,G,UACH,oBAEdW,YAFc,MAHM,mCAGN,EAGd7P,EAHc,EAGdA,IACAmP,EAJc,EAIdA,IACAC,EALc,EAKdA,KALc,IAMdU,eANc,MAMJ,2BANI,MAOdC,YAPc,MAOP,KAPO,MAQdV,aARc,MAQN,OARM,kBASPQ,EATO,YASC7P,EATD,YASQmP,EATR,YASeC,EATf,oBAS+BU,EAT/B,iBAS+CC,EAT/C,kBAS6DV,M,IAV1DH,G,4CA+BC,WAAMlP,GAAN,eAAA2D,EAAA,sEA/BDuL,GAgCWU,iBAAiB,CAAET,IAAK,GAAIC,MAAO,IAAKpP,QADlD,cACZiE,EADY,4BAETA,aAAD,EAACA,EAAUrH,OAFD,2C,2DA/BDsS,G,0BAoCa,WAAoB,IAAnBG,EAAmB,uDAAX,OACvC,OAAQA,GACN,IAAM,IACJ,MAAO,KACT,IAAM,IACJ,MAAO,KACT,IAAM,GACN,IAAM,OACJ,MAAO,OACT,QACE,MAAM,IAAIhL,MAAJ,6BAAgCgL,Q,ubC5CvC,IAEcW,G,qNAgBI,WAErB,OAD4B,EAAKnP,MAAzBoP,gBAELxP,MAAM,EArBoB,IAsB1ByP,MAAK,SAAAC,GAAc,OAClBA,EAAeC,mBC7BW,OD8BtB,M,+CAGD,IACCzP,EAAcC,KAAKC,MAAnBF,UACF0P,EAAoBzP,KAAK0P,uBACvBF,EAA4BC,EAA5BD,kBAAmB/G,EAASgH,EAAThH,KAE3B,OACE,yBAAK1I,UAAWG,IAAWH,EAAW,cAAe,SACjDyP,EACA,oCACE,yBAAKzP,UAAU,4BACf,0BAAMA,UAAU,kBACQ,IAApByP,GAAyBG,QAAQ,GADrC,KAGA,yBAAK5P,UAAU,WAAf,KACA,0BAAMA,UAAU,QAAQ6P,aAAO,IAAI1I,KAAY,IAAPuB,GAAc,QAGxD,oCACE,yBAAK1I,UAAU,yBACf,yBAAKA,UAAU,WAAf,qBAGJ,yBAAKA,UAAU,cAAf,cACc,IAA2B4P,QAAQ,GADjD,4B,GA/CwCvP,iB,6aAA3BgP,G,YACA,CACjBrP,UAAWM,YAAEC,OACb+O,gBAAiBhP,YAAEwI,QACjBxI,YAAEgI,MAAM,CACNmH,kBAAmBnP,YAAEwH,OACrBY,KAAMpI,YAAEwH,Y,IANKuH,G,eAWG,CACpBrP,UAAW,GACXsP,gBAAiB,KEfrB,IAAMQ,GAAoB,CACxB,YAAa,QACb,cAAe,QACfC,OAAQ,SACRC,IAAK,MACL,oBAAqB,eACrB,sBAAuB,eACvBC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,KAAM,QAQaC,G,sIAWV,IAhBYC,EAgBZ,EACqBrQ,KAAKC,MAAzBF,EADD,EACCA,UAAWuQ,EADZ,EACYA,KAEnB,OAAKA,EAGH,yBAAKvQ,UAAWG,IAAWH,GAAYwQ,KAtBtBF,EAsBmCC,EAtB3B,iCACHT,GAAkBQ,IAAa,UAD5B,SAsBkCG,IAAI,KAH7C,S,GAdiBpQ,iB,6aAApBgQ,G,YACA,CACjBrQ,UAAWM,YAAEC,OACbgQ,KAAMjQ,YAAEC,S,IAHS8P,G,eAMG,CACpBrQ,UAAW,GACXuQ,KAAM,KCzBH,IAAMG,GAAO,SAAAC,GAAO,OAAgB,EAAVA,EAAe,EAAK,IACxCC,GAAO,SAAAC,GAAU,OAAyB,GAAnBA,EAAa,IAAW,GAGvCC,G,iCAgBnB,WAAY5Q,GAAO,yBACjB,cAAMA,GADW,4BAKH,WAAM,aACZ6Q,EADY,EACZA,aADY,IACE7Q,MAC2B8Q,eAAzCC,EAFY,EAEZA,eAAgBC,EAFJ,EAEIA,eAExB,IAAKH,EAAgB,OAAO,KAE5B,IAAMI,EAAsB,MAAjBJ,EAAuBH,GAAOF,GAEzC,OACE,yBAAK1Q,UAAU,2BACZmR,EAAGF,GAAgBrB,QAAQ,GAD9B,IAGGuB,EAAGD,GAAgBtB,QAAQ,GAH9B,IAKoB,MAAjBmB,EAAuB,IAAM,QAjBlC,EAAKA,aAAe/P,EAAarC,IAAI8B,GAFpB,E,6CAwBV,MAC+BR,KAAKC,MAAnCF,EADD,EACCA,UAAWgR,EADZ,EACYA,eACXT,EAAkDS,EAAlDT,KAAMa,EAA4CJ,EAA5CI,QAASH,EAAmCD,EAAnCC,eAAgBC,EAAmBF,EAAnBE,eAEvC,OACE,yBACElR,UAAWG,IACTH,EAAW,WAAY,OAAQ,SAAU,qBAAsB,2BAGjE,kBAAC,GAAD,CAAauQ,KAAMA,IACnB,yBAAKvQ,UAAU,iBACb,yBAAKA,UAAU,4BACZoR,GAGH,yBAAKpR,UAAU,YACZiR,EAAerB,QAAQ,GACxB,0BAAM5P,UAAU,mBAAhB,KACCkR,EAAetB,QAAQ,GAH1B,KAOC3P,KAAKoR,sB,GA/DoChR,iB,6aAA/ByQ,G,YACA,CACjB9Q,UAAWM,YAAEC,OACbyQ,eAAgB1Q,YAAEgI,MAAM,CACtBiI,KAAMjQ,YAAEC,OACR6Q,QAAS9Q,YAAEC,OACX0Q,eAAgB3Q,YAAEwH,OAClBoJ,eAAgB5Q,YAAEwH,W,IAPHgJ,G,eAWG,CACpB9Q,UAAW,GACXgR,eAAgB,K,ICrBCM,G,sIAeV,MACuBrR,KAAKC,MAA3BF,EADD,EACCA,UAAWuR,EADZ,EACYA,OAEnB,OAAKA,EAAO9U,OAGV,yBAAKuD,UAAWG,IAAWH,EAAW,WACpC,4BACGuR,EAAO9I,KAAI,SAAA+I,GAAK,OACf,wBAAInS,IAAKmS,EAAMlM,OAAQkM,EAAMlM,YANR,S,GAlBGjF,iB,6aAAfiR,G,YACA,CACjBtR,UAAWM,YAAEC,OACbgR,OAAQjR,YAAEwI,QACRxI,YAAEgI,MAAM,CACNhD,MAAOhF,YAAEC,Y,IALI+Q,G,eAUG,CACpBtR,UAAW,GACXuR,OAAQ,K,ICRSE,G,sIAeV,MACwDxR,KAAKC,MAA5DF,EADD,EACCA,UAAW0R,EADZ,EACYA,eAAgBpC,EAD5B,EAC4BA,gBAAiBiC,EAD7C,EAC6CA,OAEpD,OACE,yBAAKvR,UAAWG,IAAWH,EAAW,oBACpC,kBAAC,GAAD,CAAwBgR,eAAgBU,EAAe,KACvD,kBAAC,GAAD,CAAoBpC,gBAAiBA,IACrC,kBAAC,GAAD,CAAQiC,OAAQA,S,GAtBelR,iB,6aAAlBoR,G,YACA,CACjBzR,UAAWM,YAAEC,OACbmR,eAAgBpR,YAAEqR,MAClBrC,gBAAiBhP,YAAEqR,MACnBJ,OAAQjR,YAAEqR,Q,IALOF,G,eAQG,CACpBzR,UAAW,GACX0R,eAAgB,GAChBpC,gBAAiB,GACjBiC,OAAQ,K,ICVSK,G,sIAsBV,MACgC3R,KAAKC,MAApCF,EADD,EACCA,UAAWsP,EADZ,EACYA,gBAEnB,OACE,kBAACpD,GAAA,EAAD,CAAOlM,UAAU,QACf,+BACE,4BACE,oCACA,yCACA,wBAAI6R,cAAY,UAAUvM,MAAM,mBAAhC,WACA,mCACA,mCACA,uCAGJ,+BACGgK,EAAgBxP,MAAM,EAAG,IAAI2I,KAAI,SAAA+G,GAAkB,IAEhD9G,EAQE8G,EARF9G,KACAoJ,EAOEtC,EAPFsC,YACAC,EAMEvC,EANFuC,QACAC,EAKExC,EALFwC,SACAvC,EAIED,EAJFC,kBACAwC,EAGEzC,EAHFyC,oBACA1B,EAEEf,EAFFe,KACAa,EACE5B,EADF4B,QAGF,OACE,wBAAI/R,IAAG,0BAAqBqJ,IAC1B,4BACGmH,aAAO,IAAI1I,KAAY,IAAPuB,GAAc,OAEjC,4BACE,kBAAC,GAAD,CAAa6H,KAAMA,IADrB,IAC+Ba,GAE/B,4BACGU,EAAYlC,QAAQ,GADvB,IAC4BqC,EAAoBrC,QAAQ,GADxD,KAGA,4BACGmC,GAEH,wBACE/R,UAAWG,IACTH,EAAW,CAAE,YAAayP,GL3EZ,OK8EM,IAApBA,GAAyBG,QAAQ,GALrC,KAOA,6BACe,IAAXoC,GAAgBpC,QAAQ,GAD5B,e,GAvE4BvP,iB,6aAAvBuR,G,YACA,CACjB5R,UAAWM,YAAEC,OACb+O,gBAAiBhP,YAAEwI,QACjBxI,YAAEgI,MAAM,CACNI,KAAMpI,YAAEwH,OACRgK,YAAaxR,YAAEwH,OACfiK,QAASzR,YAAEwH,OACXkK,SAAU1R,YAAEwH,OACZ2H,kBAAmBnP,YAAEwH,OACrBmK,oBAAqB3R,YAAEwH,OACvByI,KAAMjQ,YAAEC,OACR6Q,QAAS9Q,YAAEC,Y,IAZEqR,G,eAiBG,CACpB5R,UAAW,GACXsP,gBAAiB,K,ICrBA4C,G,sIAmBV,MAC+BjS,KAAKC,MAAnCF,EADD,EACCA,UAAW0R,EADZ,EACYA,eAEnB,OACE,kBAACpH,EAAA,EAAD,CAAKtK,UAAWG,IAAWH,EAAW,eAAgB,cAEnD0R,EAAe5R,MAAM,EAAG,GAAG2I,KAAI,SAAA0J,GAAiB,IACvCf,EAAwDe,EAAxDf,QAASH,EAA+CkB,EAA/ClB,eAAgBC,EAA+BiB,EAA/BjB,eAAgBxI,EAAeyJ,EAAfzJ,KAAM6H,EAAS4B,EAAT5B,KAEvD,OACE,kBAAChG,EAAA,EAAD,CAAK6H,GAAG,IAAI/S,IAAG,yBAAoBqJ,IACjC,yBAAK1I,UAAU,iEACb,kBAAC,GAAD,CAAauQ,KAAMA,IACnB,yBAAKvQ,UAAU,iBACb,yBAAKA,UAAU,4BACZoR,GAEH,yBAAKpR,UAAU,YACZiR,EAAerB,QAAQ,GACxB,0BAAM5P,UAAU,mBAAhB,KACCkR,EAAetB,QAAQ,IAE1B,yBAAK5P,UAAU,QACZ6P,aAAO,IAAI1I,KAAY,IAAPuB,GAAc,2B,GA1CLrI,iB,k/BAAzB6R,G,YACA,CACjBlS,UAAWM,YAAEC,OACbmR,eAAgBpR,YAAEwI,QAChBxI,YAAEgI,MAAM,CACNiI,KAAMjQ,YAAEC,OACR6Q,QAAS9Q,YAAEC,OACX0Q,eAAgB3Q,YAAEwH,OAClBoJ,eAAgB5Q,YAAEwH,OAClBY,KAAMpI,YAAEwH,Y,IATKoK,G,eAcG,CACpBlS,UAAW,GACX0R,eAAgB,KCTb,IAEMW,GAAY,CACvB,CAAEC,SAAU,iBAAkB9D,IAAK,WAAYC,MAAO,cAGnC8D,G,mCASnB,WAAYrS,GAAO,yBACjB,cAAMA,GADW,kDAmBM,gCAAA8C,EAAA,6DACjB3D,EAAM2B,EAAarC,IAAI6B,GACvBkO,EAAQ1N,EAAarC,IAAI8B,GAFR,kBAIY8N,GAAQiE,6BAA6BH,GAAWhT,EAAKqP,GAJjE,OAIf+D,EAJe,OAMrB,EAAKhJ,SAAS,CAAE7C,SAAS,IACzB,EAAK6C,SAAS,CACZqF,UAAW2D,EAAmBhK,KAAI,SAACiK,EAAkBhM,GAAQ,MACzBgM,EAAiBzW,KAA3C0W,EADmD,EACnDA,OAAQC,EAD2C,EAC3CA,MAAOrB,EADoC,EACpCA,OAEvB,WACEG,eAAgBkB,EAAM3W,KACtBqT,gBAAiBqD,EAAO1W,KACxBsV,UACGc,GAAU3L,OAGjBM,YAAa,IAAIG,KACjB0L,YAAY,EACZjM,SAAS,IApBU,kDAuBrB6E,QAAQC,MAAR,MAEA,EAAKjC,SAAS,CACZoJ,YAAY,EACZjM,SAAS,IA3BU,2DAjBvB,EAAKiD,MAAQ,CACXiF,UAAW,GACX+D,YAAY,EACZ7L,iBAAagD,EACbpD,SAAS,GANM,E,4JAWX3G,KAAK6S,yB,OACX7S,KAAKsH,SAAWC,YAAYvH,KAAK6S,uBA3BR,K,0IA+BzBpL,cAAczH,KAAKsH,Y,+BAmCZ,IACCvH,EAAcC,KAAKC,MAAnBF,UADD,EAEiDC,KAAK4J,MAArDiF,EAFD,EAECA,UAAW9H,EAFZ,EAEYA,YAAa6L,EAFzB,EAEyBA,WAAYjM,EAFrC,EAEqCA,QAE5C,OACE,yBAAK5G,UAAWG,IAAWH,EAAW,YACnC6S,GACC,kBAAC,GAAD,0CACqC,SADrC,8BAC2E,IACzE,uBAAG/G,KAAK,cAAR,YAFF,KAMDgD,EAAUrG,KAAI,SAAAsK,GAAY,IAEvBzD,EAMEyD,EANFzD,gBACAoC,EAKEqB,EALFrB,eACAH,EAIEwB,EAJFxB,OACAe,EAGES,EAHFT,SACA9D,EAEEuE,EAFFvE,IACAC,EACEsE,EADFtE,KAGF,OACE,kBAACzF,EAAA,EAAD,CAAMhJ,UAAU,OAAOX,IAAG,UAAKmP,EAAL,YAAYC,IACpC,kBAACuE,GAAA,EAAD,CAAYhT,UAAU,mCACnBsS,GAGH,kBAACrJ,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CAAKtK,UAAU,gBACb,kBAACuK,EAAA,EAAD,CAAK0I,GAAG,KACN,kBAAC,GAAD,CACEvB,eAAgBA,EAChBpC,gBAAiBA,EACjBiC,OAAQA,KAGZ,kBAAChH,EAAA,EAAD,CAAK0I,GAAG,KACN,kBAAC,GAAD,CACE3D,gBAAiBA,OAKzB,kBAAC4D,GAAA,EAAD,CAAYlT,UAAU,uBACpB,kBAAC,GAAD,CAAkB0R,eAAgBA,SAM1C,yBAAK1R,UAAU,8BACb,kBAAC,GAAD,CACEgH,YAAaA,EACbK,eAxHoBiH,KAyHpB1H,QAASA,U,GApHgBvG,iB,6aAAhBkS,G,YACA,CACjBvS,UAAWM,YAAEC,S,IAFIgS,G,eAKG,CACpBvS,UAAW,KCrBR,IAEcmT,G,iJASC,WAClBlT,KAAKsH,SAAWC,aAAY,kBAAM,EAAKC,gBAZhB,O,6CAgBvBC,cAAczH,KAAKsH,Y,+BAGZ,IACCvH,EAAcC,KAAKC,MAAnBF,UAEFoT,EAAM,IAAIjM,KACVkM,EAAOxD,aAAOuD,EAAK,gBACnB1K,EAAOmH,aAAOuD,EAAK,QAEzB,OACE,kBAAC9I,EAAA,EAAD,CAAKtK,UAAWG,IAAWH,EAAW,eAAgB,OAAQ,UAAW,yBACvE,kBAACuK,EAAA,EAAD,CAAKC,GAAG,IAAIxK,UAAU,QACnB0I,GAEH,kBAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAIxK,UAAU,QACnBqT,Q,GA9BwChT,iB,6aAA9B8S,G,YACA,CACjBnT,UAAWM,YAAEC,S,IAFI4S,G,eAKG,CACpBnT,UAAW,K,ICJMsT,G,sIASV,IACCtT,EAAcC,KAAKC,MAAnBF,UAER,OACE,yBAAKA,UAAWG,IAAWH,IACzB,kBAAC,GAAD,MACA,kBAACsK,EAAA,EAAD,CAAKtK,UAAU,gBACb,kBAACuK,EAAA,EAAD,CAAKgJ,GAAG,IAAIvT,UAAU,QACpB,kBAAC,GAAD,OAEF,kBAACuK,EAAA,EAAD,CAAKgJ,GAAG,IAAIvT,UAAU,QACpB,kBAAC,GAAD,a,GApB0BK,iB,IAAjBiT,G,YACA,CACjBtT,UAAWM,YAAEC,S,IAFI+S,G,eAKG,CACpBtT,UAAW,K,ubCTR,IAAMwT,GACL,YADKA,GAEJ,aAGYC,G,iCASnB,WAAYvT,GAAO,yBACjB,cAAMA,GADW,sBAKT,SAAAjB,GACRyU,SAASC,gBAAgB3T,UAAYf,EACrC+B,EAAaU,IAAIf,EAAgB1B,GAEjC,EAAKwI,iBATY,iCAYE,kBACnBiM,SAASC,gBAAgB3T,YAAcwT,MAXvC,EAAKI,QAAU,EAAKA,QAAQtU,KAAb,QAFE,E,6CAgBV,WACCU,EAAcC,KAAKC,MAAnBF,UAEF6T,EAAqB5T,KAAK4T,qBAEhC,OACE,oCACE,kBAACnJ,GAAA,EAAD,CAAO1K,UAAU,QAAjB,UACA,kBAAC8T,GAAA,EAAD,CAAa9T,UAAWG,IAAWH,IACjC,kBAACkL,GAAA,EAAD,CACEoB,QAAS,kBAAM,EAAKsH,QAAQJ,KAC5BrI,MAAO0I,EAAqB,UAAY,aAF1C,QAMA,kBAAC3I,GAAA,EAAD,CACEoB,QAAS,kBAAM,EAAKsH,QAAQJ,KAC5BrI,MAAO0I,EAAqB,YAAc,WAF5C,e,GAxCyCxT,iB,IAA9BoT,G,YACA,CACjBzT,UAAWM,YAAEC,S,IAFIkT,G,eAKG,CACpBzT,UAAW,K,ocCTM+T,G,iCAUnB,WAAY7T,GAAO,yBACjB,cAAMA,GADW,uBAgBR,kBAAM,EAAKuH,iBAhBH,kCAkBG,SAAApI,GAAG,OACvB2B,EAAarC,IAAIU,MAnBA,yBAsBN,WAAM,IACT2U,EAAS,EAAKnK,MAAdmK,KACR,EAAKvK,SAAS,CAAEuK,MAAOA,OAtBvB,EAAKnK,MAAQ,CACXmK,MAAM,GAHS,E,wDAQjBpU,OAAOqU,iBAAiB,UAAWhU,KAAKiU,Y,6CAIxCtU,OAAOuU,oBAAoB,UAAWlU,KAAKiU,Y,+BAepC,MACgCjU,KAAKC,MAApCF,EADD,EACCA,UAAWoU,EADZ,EACYA,gBACXJ,EAAS/T,KAAK4J,MAAdmK,KACFK,EAAapT,KAAKM,UAAUtB,KAAKqU,oBAAoBF,IAE3D,OACE,yBAAKpU,UAAWG,IAAWH,IACzB,2BACE,kBAACkL,GAAA,EAAD,CAAQC,MAAM,UAAUmB,QAASrM,KAAKsU,YAClCP,EAAgB,OAAT,OADX,uBAIF,uBAAGhU,UAAU,SAAb,2CACCgU,GACC,kBAAC,KAAD,CAAmBQ,SAAS,OAAOC,MAAOC,WAAS1U,UAAU,QAC1DqU,Q,GApDwChU,iB,6aAAhC0T,G,YACA,CACjB/T,UAAWM,YAAEC,OACb6T,gBAAiB9T,YAAEqU,MAAM/T,GAAmBsI,a,IAH3B6K,G,eAMG,CACpB/T,UAAW,K,ICTM4U,G,8MAUH,WAAM,IACZR,EAAoB,EAAKlU,MAAzBkU,gBACRpT,EAAa6T,cAAcT,M,+CAGpB,IACCpU,EAAcC,KAAKC,MAAnBF,UAER,OACE,yBAAKA,UAAWG,IAAWH,IACzB,2BACE,kBAACkL,GAAA,EAAD,CAAQC,MAAM,UAAUmB,QAASrM,KAAK4U,eAAtC,iCAIF,uBAAG7U,UAAU,SAAb,8C,GAzB+CK,iB,6aAAlCuU,G,YACA,CACjB5U,UAAWM,YAAEC,OACb6T,gBAAiB9T,YAAEqU,MAAMjY,OAAOoY,KAAK/T,IAAcmI,a,IAHlC0L,G,eAMG,CACpB5U,UAAW,K,ICcM+U,G,iCASnB,WAAY7U,GAAO,yBACjB,cAAMA,GADW,8BAKD,iBAAO,CACvB8U,uBAAmBhL,EACnBiL,gBAAiBjU,EAAarC,IAAI6B,GAClCuQ,aAAc/P,EAAarC,IAAI8B,OARd,iCAWE,SAAA8I,GACnB,EAAKE,SAAS,CAAEwL,gBAAiB1L,EAAMG,OAAO3K,WAZ7B,8DAeC,WAAMwK,GAAN,eAAAvG,EAAA,6DAClBuG,EAAMI,iBACEsL,EAAoB,EAAKpL,MAAzBoL,gBAFU,kBAKN1G,GAAQ2G,WAAWD,GALb,yCAMd,EAAKxL,SAAS,CAAEuL,mBAAmB,IACnChU,EAAaU,IAAIlB,EAAiByU,GAPpB,0BAUhB,EAAKxL,SAAS,CAAEuL,mBAAmB,IAVnB,kDAYhB,EAAKvL,SAAS,CAAEuL,mBAAmB,IAZnB,0DAfD,qFA+BD,SAAAtG,GAChB,EAAKjF,SAAS,CAAEsH,aAAcrC,IAC9B1N,EAAaU,IAAIjB,EAAmBiO,MAjCnB,4CAoCa,WAC9B,EAAKjF,SAAS,EAAK0L,mBACnBnU,EAAaoU,UApCb,EAAKvL,MAAQ,EAAKsL,kBAFD,E,6CAyCV,WACCnV,EAAcC,KAAKC,MAAnBF,UADD,EAEsDC,KAAK4J,MAA1DmL,EAFD,EAECA,kBAAmBC,EAFpB,EAEoBA,gBAAiBlE,EAFrC,EAEqCA,aAE5C,OACE,yBAAK/Q,UAAWG,IAAWH,IACzB,wCAEA,kBAACsK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACxB,EAAA,EAAD,CAAMhJ,UAAU,QACd,kBAACgT,GAAA,EAAD,KACE,wBAAIhT,UAAU,OAAd,WAEF,kBAACiJ,EAAA,EAAD,KACE,kBAAC,GAAD,MAEA,6BAEA,2BACE,kBAACiC,GAAA,EAAD,CACEC,MAAM,SACNmB,QAASrM,KAAKoV,+BAFhB,2BAOF,uBAAGrV,UAAU,SAAb,mFAQR,kBAACsK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACxB,EAAA,EAAD,CAAMhJ,UAAU,QACd,kBAACgT,GAAA,EAAD,KACE,wBAAIhT,UAAU,OAAd,QAEF,kBAACiJ,EAAA,EAAD,KACE,kBAAC,GAAD,CAAyBmL,gBAAiB1T,IAE1C,6BAEA,kBAAC,GAAD,CAA2B0T,gBAAiB1T,OAKlD,kBAAC6J,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACxB,EAAA,EAAD,CAAMhJ,UAAU,QACd,kBAACgT,GAAA,EAAD,KACE,wBAAIhT,UAAU,OAAd,YAEF,kBAACiJ,EAAA,EAAD,KACE,kBAACkB,GAAA,EAAD,CAAMC,SAAUnK,KAAKqV,mBACnB,kBAAC7K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,oBACA,kBAACC,GAAA,EAAD,CACEC,KAAK,OACLC,GAAG,cACH9K,UAAWG,IACT,CACE,WAAY6U,EACZ,cAAoC,IAAtBA,IAGlBjK,SAAU9K,KAAKsV,mBACfxW,MAAOkW,KAGX,kBAAC/J,GAAA,EAAD,CAAQC,MAAM,UAAUN,KAAK,UAA7B,yBAGF,6BAEA,kBAACJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAO1K,UAAU,QAAjB,kBACA,kBAAC8T,GAAA,EAAD,KACE,kBAAC5I,GAAA,EAAD,CACEC,MAAwB,KAAjB4F,EAAsB,UAAY,YACzCzE,QAAS,kBAAM,EAAKkJ,gBAAgB,MAFtC,QAMA,kBAACtK,GAAA,EAAD,CACEC,MAAwB,MAAjB4F,EAAuB,UAAY,YAC1CzE,QAAS,kBAAM,EAAKkJ,gBAAgB,OAFtC,KAMA,kBAACtK,GAAA,EAAD,CACEC,MAAwB,MAAjB4F,EAAuB,UAAY,YAC1CzE,QAAS,kBAAM,EAAKkJ,gBAAgB,OAFtC,gB,GA/IkBnV,iBCpBvB,SAASoV,KACtB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,U,IDSSZ,G,YACA,CACjB/U,UAAWM,YAAEC,S,IAFIwU,G,eAKG,CACpB/U,UAAW,KEzBf4V,IAASC,OACP,kBAACJ,GAAD,MACA/B,SAASoC,eAJI,e","file":"js/app.d5db6622.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([389,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class MainNav extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  render() {\n    const { className } = this.props;\n    return (\n      <div className={classNames(className, 'header')}>\n        <Link to=\"/\"><span className=\"fas fa-home\" /></Link>\n        <Link to=\"/settings\"><span className=\"fas fa-cog\" /></Link>\n      </div>\n\n    );\n  }\n}\n","export const ANGULAR_LOCAL_STORAGE_PREFIX = 'ngStorage-';\nexport const WEATHER_KEY_KEY = 'weatherKey';\nexport const WEATHER_UNITS_KEY = 'weatherUnits';\nexport const BUS_ROUTE_STOP_TAGS_KEY = 'routeStopTags';\nexport const HTML_CLASS_KEY = 'htmlClass';\nexport const ALL_SETTINGS_KEYS = [\n  WEATHER_KEY_KEY,\n  WEATHER_UNITS_KEY,\n  BUS_ROUTE_STOP_TAGS_KEY,\n  HTML_CLASS_KEY,\n].reduce(\n  // include legacy keys\n  (fullArray, key) => ([...fullArray, key, `${ANGULAR_LOCAL_STORAGE_PREFIX}${key}`]),\n  [],\n);\n\nexport const SAMPLE_DATA = {\n  [BUS_ROUTE_STOP_TAGS_KEY]: ['14|5565', '67|6208', '27|3930', '12|7552'],\n};\n\nexport default class LocalStorage {\n  static get(key) {\n    return JSON.parse((\n      window.localStorage.getItem(key) ||\n      // legacy support\n      window.localStorage.getItem(`${ANGULAR_LOCAL_STORAGE_PREFIX}${key}`)\n    )) || '';\n  }\n\n  static set(key, val) {\n    window.localStorage.setItem(key, JSON.stringify(val));\n\n    // window.addEventListener('storage') doesn't fire on the current tab by default. make it.\n    // https://gist.github.com/TakashiSasaki/4282903\n    window.dispatchEvent(new Event('storage'));\n  }\n\n  static setSampleData(key) {\n    this.set(key, SAMPLE_DATA[key]);\n  }\n\n  static dump() {\n    ALL_SETTINGS_KEYS.forEach(key => window.localStorage.removeItem(key));\n  }\n\n  static getBusStopsFromLocalStorage() {\n    return this.get(BUS_ROUTE_STOP_TAGS_KEY) || [];\n  }\n\n  static addBusStopToLocalStorage(routeStopTag) {\n    const routeStopTags = this.getBusStopsFromLocalStorage();\n    this.set(\n      BUS_ROUTE_STOP_TAGS_KEY,\n      [...new Set([...routeStopTags, routeStopTag])], // no duplicates\n    );\n  }\n\n  static removeBusStopFromLocalStorage(routeStopTag) {\n    const routeStopTags = this.getBusStopsFromLocalStorage();\n    this.set(\n      BUS_ROUTE_STOP_TAGS_KEY,\n      routeStopTags.filter(tag => tag !== routeStopTag),\n    );\n  }\n}\n","import axios from 'axios';\nimport X2JS from 'x2js';\nimport qs from 'qs';\n\n\nexport const URL = 'http://webservices.nextbus.com/service/publicXMLFeed';\n\nexport const getUserPosition = options => (\n  new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  })\n);\n\nexport default class NextBus {\n  static async getPredictions(routeStopTags) {\n    const response = await axios.get(URL, {\n      params: {\n        command: 'predictionsForMultiStops',\n        a: 'sf-muni',\n        stops: routeStopTags,\n        useShortTitles: true,\n      },\n      paramsSerializer: params => qs.stringify(params, { arrayFormat: 'repeat' }),\n    });\n\n    const data = this.parsePredictionsXMLResponse(response.data);\n\n    return new Promise((resolve, reject) => {\n      const errorText = data?.body?.Error?.__text;\n      if (errorText) { reject(new Error(errorText)); }\n\n      resolve(data);\n    });\n  }\n\n  static async getRouteConfig() {\n    const response = await axios.get(URL, {\n      params: {\n        command: 'routeConfig',\n        a: 'sf-muni',\n        useShortTitles: true,\n      },\n    });\n\n    const data = this.parseRouteConfigXMLResponse(response.data);\n\n    return new Promise((resolve, reject) => {\n      const errorText = data?.body?.Error?.__text;\n      if (errorText) { reject(new Error(errorText)); }\n\n      resolve(this.mergeRouteData(data.body.route));\n    });\n  }\n\n  static async getStopsNearMe(meters) {\n    const responses = await axios.all([\n      getUserPosition(),\n      this.getRouteConfig(),\n    ]);\n\n    const [geoLocation, routeConfig] = responses;\n\n    const currPosition = new google.maps.LatLng(\n      geoLocation.coords.latitude,\n      geoLocation.coords.longitude,\n    );\n\n    const stopResults = [];\n    routeConfig.forEach(route => {\n      route.direction.forEach(direction => {\n        direction.stop.forEach(stop => {\n          // Find stops that are within [meters] of the users position\n          const stopLatLng = new google.maps.LatLng(stop._lat, stop._lon);\n          const distance = google.maps.geometry.spherical\n            .computeDistanceBetween(currPosition, stopLatLng);\n\n          if (distance <= meters) {\n            stopResults.push({\n              tag: route._tag,\n              title: route._title,\n\n              directionName: direction._name,\n              directionTitle: direction._title,\n\n              latLng: stopLatLng,\n\n              stopId: stop._stopId,\n              stopTag: stop._tag,\n              stopTitle: stop._title,\n            });\n          }\n        });\n      });\n    });\n\n    return stopResults;\n  }\n\n  static mergeRouteData = routeData => {\n    // The purpose of this fn is to merge stop data into direction data. this is necessary because\n    // the stops are direction unaware (inbound/outbound):\n    //\n    // routeData[0].direction[0].stop[0] = {\n    //   _tag: \"6932\"\n    // }\n    //\n    // becomes\n    //\n    // routeData[0].direction[0].stop[0] = {\n    //   _tag: \"6932\", _lat: \"37.123\", _stopId: \"12789\", _title: \"Mission\"\n    // }\n\n    routeData.forEach(route => {\n      // map the stop tags\n      const stopTags = {};\n      route.stop.forEach(stop => {\n        stopTags[stop._tag] = stop;\n      });\n\n      // there should be only 2 directions. inbound/outbound\n      route.direction.forEach(direction => {\n        direction.stop.forEach((stop, idx) => {\n          // replace the object with the one that has the full data\n          direction.stop[idx] = stopTags[stop._tag];\n        });\n      });\n    });\n    return routeData;\n  }\n\n  static async isValidStop(routeStopTag) {\n    try {\n      const response = await this.getPredictions([routeStopTag]);\n      return !!response?.body?.predictions;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static parsePredictionsXMLResponse(xmlString) {\n    return new X2JS({\n      arrayAccessFormPaths: [\n        'body.predictions',\n        'body.predictions.direction.prediction',\n      ],\n    }).xml2js(xmlString);\n  }\n\n  static parseRouteConfigXMLResponse(xmlString) {\n    return new X2JS({\n      arrayAccessFormPaths: [\n        'body.route',\n      ],\n    }).xml2js(xmlString);\n  }\n\n  static getRouteStopTag(routeTag, stopTag) {\n    return `${routeTag}|${stopTag}`;\n  }\n\n  static splitRouteStopTag(routeStopTag) {\n    return routeStopTag.split('|');\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class Loader extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    loading: T.bool,\n    small: T.bool,\n  };\n\n  static defaultProps = {\n    className: '',\n    loading: false,\n    small: false,\n  }\n\n  render() {\n    const { className, loading, small } = this.props;\n\n    if (!loading) { return null; }\n\n    return (\n      <div className={classNames(className, 'spinner', { 'spinner-small': small })}>\n        <div className=\"bounce1\" />\n        <div className=\"bounce2\" />\n        <div className=\"bounce3\" />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\nimport { differenceInMilliseconds, formatDistanceStrict } from 'date-fns';\n\nimport Loader from '../loader';\n\n\nexport const INTERVAL_MS = 250;\n\nexport default class TimeSinceLastUpdated extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    lastUpdated: T.object, // a Date object\n    msUntilWarning: T.number,\n    loading: T.bool,\n  };\n\n  static defaultProps = {\n    className: '',\n    lastUpdated: null,\n    msUntilWarning: 60000, // 1min\n    loading: false,\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.forceUpdate(), INTERVAL_MS);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getReadableTime = () => {\n    const { lastUpdated } = this.props;\n    const timeAgo = formatDistanceStrict(lastUpdated, new Date(), { roundingMethod: 'round' });\n\n    // comparing strings might lead to issues down the road, but i don't want to call both\n    // differenceInMilliseconds AND formatDistanceStrict on each render\n    if (timeAgo === '0 seconds') {\n      return 'Just now.';\n    }\n    return `${timeAgo} ago.`;\n  }\n\n  isOverdue = () => {\n    const { lastUpdated, msUntilWarning } = this.props;\n\n    if (!lastUpdated) { return false; }\n\n    return differenceInMilliseconds(new Date(), lastUpdated) >= msUntilWarning;\n  }\n\n  render() {\n    const { className, lastUpdated, loading } = this.props;\n\n    const overdue = this.isOverdue();\n\n    return (\n      <div className={classNames(className, 'time-since-last-updated')}>\n        <span className={classNames({ overdue })}>\n          {lastUpdated && this.getReadableTime()}\n        </span>\n        <Loader className=\"my-1 ml-auto\" loading={loading} small />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class ErrorMessage extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    children: T.node,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    if (!children) { return null; }\n\n    return (\n      <div className={classNames(className, 'error-message')}>\n        <span className=\"fas fa-exclamation-circle mr-1\" />\n        <span>\n          {children}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class StopInfo extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    prediction: T.shape({\n      direction: T.shape({\n        _title: T.string,\n      }),\n      _stopTitle: T.string,\n      _dirTitleBecauseNoPredictions: T.string,\n    }),\n  };\n\n  static defaultProps = {\n    className: '',\n    prediction: {},\n  }\n\n  render() {\n    const { className, prediction } = this.props;\n    const { direction, _dirTitleBecauseNoPredictions, _stopTitle } = prediction;\n\n    return (\n      <div className={classNames(className)}>\n        <div className=\"font-weight-bold\">\n          {direction?._title || _dirTitleBecauseNoPredictions}\n        </div>\n        <div>\n          @{_stopTitle}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class Times extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    predictionTimes: T.arrayOf(\n      T.shape({\n        _tripTag: T.string, // used to generate react `key`s\n        _affectedByLayover: T.string,\n        _minutes: T.string,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    predictionTimes: [],\n  }\n\n  render() {\n    const { className, predictionTimes } = this.props;\n\n    return (\n      <div className={classNames(className, 'prediction-times')}>\n        {predictionTimes.length ? (\n          <>\n            {predictionTimes.slice(0, 4).map((time, idx) => (\n              <span key={`${time._tripTag}`}>\n                <span\n                  className={classNames(\n                    'prediction-time',\n                    {\n                      'not-affected-by-layover': !time._affectedByLayover,\n                      'next-time': idx === 0,\n                      'other-time': idx !== 0,\n                    },\n                  )}\n                >\n                  {time._minutes === '0' ? 'Now' : time._minutes}\n                </span>\n                {idx !== (predictionTimes.length - 1) && ', '}\n              </span>\n            ))}\n          </>\n        ) : (\n          <span className=\"no-prediction-time\">None</span>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Card, CardBody } from 'reactstrap';\nimport classNames from 'classnames';\n\n\nexport default class RouteStopCard extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    routeTag: T.string.isRequired,\n    children: T.node.isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  render() {\n    const { className, routeTag, children } = this.props;\n\n    return (\n      <Card className={classNames(className, 'mb-2')}>\n        <CardBody className=\"d-flex align-items-center justify-content-between\">\n          <div className=\"route-tag\">\n            {routeTag}\n          </div>\n\n          <div className=\"route-tag-details\">\n            {children}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\nimport StopInfo from '../stop_info';\nimport Times from './times';\nimport RouteStopCard from '../route_stop_card';\n\n\nexport default class Predictions extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    predictions: T.arrayOf(\n      T.shape({\n        _routeTag: T.string,\n        _stopTag: T.string, // used to generate react `key`s\n        direction: T.shape({\n          prediction: T.arrayOf(\n            T.shape({\n              _tripTag: T.string, // used to generate react `key`s\n              _affectedByLayover: T.string,\n              _minutes: T.string,\n            }),\n          ),\n        }),\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    predictions: [],\n  }\n\n  render() {\n    const { className, predictions } = this.props;\n\n    return (\n      <div className={classNames(className)}>\n        {predictions.map(prediction => {\n          const { _routeTag, _stopTag, direction } = prediction;\n          return (\n            <RouteStopCard routeTag={_routeTag} key={`${_routeTag}-${_stopTag}`}>\n              <Times predictionTimes={direction?.prediction} />\n              <StopInfo prediction={prediction} />\n            </RouteStopCard>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Form, FormGroup, Row, Col, Button, Input, Label } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport NextBus from 'app/integrations/nextbus';\nimport LocalStorage from 'app/utils/local_storage';\n\n\nexport default class ManualAdd extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    onAddOrRemoveStop: T.func.isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      routeTag: '',\n      stopTag: '',\n      stopIsValid: undefined,\n    };\n  }\n\n  onChange = (event, field) => {\n    this.setState({ [field]: event.target.value });\n  }\n\n  validateAndAddStop = async event => {\n    event.preventDefault();\n    const { onAddOrRemoveStop } = this.props;\n    const { routeTag, stopTag } = this.state;\n    const routeStopTag = NextBus.getRouteStopTag(routeTag, stopTag);\n    this.setState({ stopIsValid: undefined });\n\n    if (await NextBus.isValidStop(routeStopTag)) {\n      this.setState({ stopIsValid: true });\n      LocalStorage.addBusStopToLocalStorage(routeStopTag);\n      onAddOrRemoveStop();\n      return;\n    }\n\n    this.setState({ stopIsValid: false });\n  }\n\n  render() {\n    const { className } = this.props;\n    const { routeTag, stopTag, stopIsValid } = this.state;\n\n    return (\n      <Form onSubmit={this.validateAndAddStop} className={classNames(className)}>\n        <Row>\n          <Col xs=\"6\">\n            <FormGroup>\n              <Label for=\"manual-add-route-tag\">Route Tag:</Label>\n              <Input\n                type=\"text\"\n                id=\"manual-add-route-tag\"\n                className={classNames(\n                  {\n                    'is-valid': stopIsValid,\n                    'is-invalid': stopIsValid === false,\n                  },\n                )}\n                onChange={e => this.onChange(e, 'routeTag')}\n                placeholder=\"12\"\n                value={routeTag}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs=\"6\">\n            <FormGroup>\n              <Label for=\"manual-add-route-stop\">Stop Tag:</Label>\n              <Input\n                type=\"text\"\n                id=\"manual-add-route-stop\"\n                className={classNames(\n                  {\n                    'is-valid': stopIsValid,\n                    'is-invalid': stopIsValid === false,\n                  },\n                )}\n                onChange={e => this.onChange(e, 'stopTag')}\n                placeholder=\"5837\"\n                value={stopTag}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <div>\n          <Button color=\"primary\" type=\"submit\">Validate & Add Stop</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Alert, Form, Input, Label, Table } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport NextBus from 'app/integrations/nextbus';\nimport LocalStorage from 'app/utils/local_storage';\nimport Loader from 'app/components/loader';\nimport ErrorMessage from 'app/components/error_message';\n\n\nexport default class GeolocateAdd extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    onAddOrRemoveStop: T.func.isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      errMsg: undefined,\n      nearbyStops: [],\n    };\n  }\n\n  getNearbyStops = async event => {\n    const meters = event.target.value;\n    if (!meters) { return; }\n\n    this.setState({ loading: true });\n    try {\n      const nearbyStops = await NextBus.getStopsNearMe(meters);\n      this.setState({\n        loading: false,\n        errMsg: undefined,\n        nearbyStops,\n      });\n    } catch (e) {\n      console.error(e.message);\n      this.setState({\n        loading: false,\n        errMsg: e.message,\n      });\n    }\n  }\n\n  addStop = routeStopTag => {\n    const { onAddOrRemoveStop } = this.props;\n\n    LocalStorage.addBusStopToLocalStorage(routeStopTag);\n    onAddOrRemoveStop();\n  }\n\n  render() {\n    const { className } = this.props;\n    const { loading, errMsg, nearbyStops } = this.state;\n\n    return (\n      <>\n        <Alert color=\"danger\" fade={false}>\n          Warning: This {'won\\'t'} work if this app is hosted on http. See{' '}\n          <a\n            href=\"https://developers.google.com/web/updates/2016/04/geolocation-on-secure-contexts-only\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Geolocation API Removed from Unsecured Origins in Chrome 50\n          </a>. However, hosting this app on https causes a Mixed Content issue (https site\n          requesting {'NextBus\\'s'} http-only traffic).\n        </Alert>\n\n        <Form className={classNames(className, 'mb-2')} inline>\n          <Label className=\"mr-2\">Find stops within</Label>\n          <Input type=\"select\" onChange={this.getNearbyStops}>\n            {/* Values are in meters */}\n            <option value=\"\">--Choose One--</option>\n            <option value=\"322\">1/5 mile</option>\n            <option value=\"402\">1/4 mile</option>\n            <option value=\"804\">1/2 mile</option>\n          </Input>\n          <Loader className=\"ml-3\" loading={loading} />\n        </Form>\n\n        <ErrorMessage>{errMsg}</ErrorMessage>\n\n        {!!nearbyStops.length && (\n          <Table striped hover className=\"mt-4\">\n            <thead>\n              <tr>\n                <th>Route</th>\n                <th>Direction</th>\n                <th>Stop</th>\n              </tr>\n            </thead>\n            <tbody>\n              {nearbyStops.map(nearbyStop => {\n                const { tag, stopTag, title, directionTitle, stopTitle } = nearbyStop;\n                const routeStopTag = NextBus.getRouteStopTag(tag, stopTag);\n\n                return (\n                  <tr\n                    className=\"clickable\"\n                    key={routeStopTag}\n                    onClick={() => this.addStop(routeStopTag)}\n                  >\n                    <td>{title}</td>\n                    <td>{directionTitle}</td>\n                    <td>{stopTitle}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport ManualAdd from './manual_add';\nimport GeolocateAdd from './geolocate_add';\n\n\nexport default class AddStopForm extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    toggleAddStopForm: T.func.isRequired,\n    onAddOrRemoveStop: T.func.isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n    };\n  }\n\n  toggle = tab => {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  render() {\n    const { className, toggleAddStopForm, onAddOrRemoveStop } = this.props;\n    const { activeTab } = this.state;\n\n    return (\n      <div className={classNames(className, 'add-form', 'mb-2')}>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classNames('clickable', { active: activeTab === '1' })}\n              onClick={() => this.toggle('1')}\n            >\n              Geolocation\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classNames('clickable', { active: activeTab === '2' })}\n              onClick={() => this.toggle('2')}\n            >\n              Manual Input\n            </NavLink>\n          </NavItem>\n          <button type=\"button\" className=\"btn close-form\" onClick={toggleAddStopForm}>\n            <span className=\"fas fa-times\" />\n          </button>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <GeolocateAdd onAddOrRemoveStop={onAddOrRemoveStop} />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <ManualAdd onAddOrRemoveStop={onAddOrRemoveStop} />\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport LocalStorage from 'app/utils/local_storage';\n\n\nconst buttonProps = {\n  className: 'mr-1',\n  size: 'xs',\n  color: 'secondary',\n  outline: true,\n};\n\nexport default class EditTogglers extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    showBusRemove: T.bool.isRequired,\n    toggleShowBusRemove: T.func.isRequired,\n    toggleAddStopForm: T.func.isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  render() {\n    const {\n      className,\n      showBusRemove,\n      toggleShowBusRemove,\n      toggleAddStopForm,\n    } = this.props;\n    const routeStopTags = LocalStorage.getBusStopsFromLocalStorage();\n\n    return (\n      <div className={classNames(className, 'mb-2')}>\n        {!showBusRemove && (\n          <Button {...buttonProps} onClick={toggleAddStopForm}>\n            <span className=\"fas fa-plus\" />\n          </Button>\n        )}\n        {!!routeStopTags.length && (\n          <Button {...buttonProps} onClick={toggleShowBusRemove}>\n            <span className=\"fas fa-pen\" />\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport NextBus from 'app/integrations/nextbus';\nimport LocalStorage from 'app/utils/local_storage';\nimport RouteStopCard from '../route_stop_card';\n\n\nexport default class RouteStopRemoval extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    onAddOrRemoveStop: T.func.isRequired,\n  };\n\n  removeStop = (routeTag, stopTag) => {\n    const routeStopTag = NextBus.getRouteStopTag(routeTag, stopTag);\n    const { onAddOrRemoveStop } = this.props;\n\n    LocalStorage.removeBusStopFromLocalStorage(routeStopTag);\n    onAddOrRemoveStop();\n    this.forceUpdate();\n  }\n\n\n  render() {\n    const { className } = this.props;\n    const routeStopTags = LocalStorage.getBusStopsFromLocalStorage();\n\n    return (\n      <div className={classNames(className)}>\n        {routeStopTags.map(routeStopTag => {\n          const [routeTag, stopTag] = NextBus.splitRouteStopTag(routeStopTag);\n\n          return (\n            <RouteStopCard routeTag={routeTag} key={routeStopTag}>\n              <Button\n                color=\"danger\"\n                size=\"lg\"\n                onClick={() => this.removeStop(routeTag, stopTag)}\n              >\n                Remove Stop\n              </Button>\n            </RouteStopCard>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Card, CardBody } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport LocalStorage from 'app/utils/local_storage';\nimport { WARNING_AFTER_N_MISSED_CALLS } from 'app/constants';\nimport NextBus from 'app/integrations/nextbus';\nimport TimeSinceLastUpdated from 'app/components/time_since_last_updated';\nimport ErrorMessage from 'app/components/error_message';\n\nimport Predictions from './predictions';\nimport AddStopForm from './add_stop_form';\nimport EditTogglers from './edit_togglers';\nimport RouteStopRemoval from './route_stop_removal';\n\n\nexport const CALL_INTERVAL = 10 * 1000;\nexport const MS_UNTIL_WARNING = CALL_INTERVAL * WARNING_AFTER_N_MISSED_CALLS;\n\nexport const sortPredictions = (routeStopTags, predictions = []) => {\n  const sortedList = [];\n  predictions.forEach(prediction => {\n    const routeStopTag = `${prediction._routeTag}|${prediction._stopTag}`;\n    sortedList[routeStopTags.indexOf(routeStopTag)] = prediction;\n  });\n  return sortedList;\n};\n\nexport default class Bus extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      predictions: [],\n      lastUpdated: undefined,\n      showAddStopForm: false,\n      showBusRemove: false,\n      loading: false,\n      errMsg: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    await this.updateBusPredictions();\n    this.interval = setInterval(() => this.updateBusPredictions(), CALL_INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  toggleAddStopForm = () => {\n    const { showAddStopForm } = this.state;\n    this.setState({ showAddStopForm: !showAddStopForm });\n  }\n\n  onAddOrRemoveStop = async () => {\n    clearInterval(this.interval);\n    await this.updateBusPredictions();\n    this.interval = setInterval(this.updateBusPredictions, CALL_INTERVAL);\n  }\n\n  toggleShowBusRemove = () => {\n    const { showBusRemove } = this.state;\n    this.setState({ showBusRemove: !showBusRemove });\n  }\n\n  updateBusPredictions = async () => {\n    const routeStopTags = LocalStorage.getBusStopsFromLocalStorage();\n\n    // Don't send an empty request\n    if (!routeStopTags.length) { return; }\n\n    this.setState({ loading: true });\n    try {\n      const predictionResponse = await NextBus.getPredictions(routeStopTags);\n\n      this.setState({\n        predictions: sortPredictions(routeStopTags, predictionResponse.body.predictions),\n        loading: false,\n        lastUpdated: new Date(),\n        errMsg: undefined,\n      });\n    } catch (e) {\n      console.error(e.message);\n      this.setState({\n        loading: false,\n        errMsg: e.message,\n      });\n    }\n  }\n\n  render() {\n    const { className } = this.props;\n    const {\n      predictions,\n      lastUpdated,\n      showAddStopForm,\n      showBusRemove,\n      loading,\n      errMsg,\n    } = this.state;\n\n    return (\n      <div className={classNames(className, 'bus')}>\n        {!errMsg && !predictions.length && (\n          <Card className=\"mb-2\">\n            <CardBody>\n              No bus stops added.\n            </CardBody>\n          </Card>\n        )}\n\n        {showBusRemove ? (\n          <RouteStopRemoval onAddOrRemoveStop={this.onAddOrRemoveStop} />\n        ) : (\n          <Predictions\n            predictions={predictions}\n          />\n        )}\n\n        {showAddStopForm && (\n          <AddStopForm\n            toggleAddStopForm={this.toggleAddStopForm}\n            onAddOrRemoveStop={this.onAddOrRemoveStop}\n          />\n        )}\n\n        {!showAddStopForm && (\n          <div className=\"d-flex align-items-start justify-content-between\">\n            <EditTogglers\n              toggleAddStopForm={this.toggleAddStopForm}\n              showBusRemove={showBusRemove}\n              toggleShowBusRemove={this.toggleShowBusRemove}\n            />\n\n            <TimeSinceLastUpdated\n              lastUpdated={lastUpdated}\n              msUntilWarning={MS_UNTIL_WARNING}\n              loading={loading}\n            />\n          </div>\n        )}\n\n        <ErrorMessage>{errMsg}</ErrorMessage>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nimport jsonpAdapter from 'axios-jsonp';\n\n\nexport const URL_BASE = 'https://api.darksky.net/forecast';\n\nexport default class DarkSky {\n  static getUrl = ({\n    // all params required\n    base = URL_BASE,\n    key,\n    lat,\n    long,\n    exclude = 'minutely,flags,currently',\n    lang = 'en',\n    units = 'auto',\n  }) => `${base}/${key}/${lat},${long}?exclude=${exclude}&lang=${lang}&units=${units}`;\n\n  static async fetchWeatherData({ lat, long, key, units }) {\n    // NOTE: this is a jsonp call. there are no status codes or errors to parse like with XHR\n    // try/catch errors in components that call this, so just return the response as-is\n    const response = await axios.get(this.getUrl({ lat, long, key, units }), {\n      adapter: jsonpAdapter, // gets around CORS\n    });\n    return response;\n  }\n\n  static async fetchAllLocationsWeatherData(locations, key, units) {\n    const darkSkyUnits = this.convertUnitsForDarkSky(units);\n    const responses = await axios.all(\n      locations.map(({ lat, long }) => (\n        this.fetchWeatherData({ lat, long, key, units: darkSkyUnits })\n      )),\n    );\n    return responses;\n  }\n\n  static isValidKey = async key => {\n    const response = await this.fetchWeatherData({ lat: 38, long: -122, key });\n    return !!response?.data;\n  }\n\n  static convertUnitsForDarkSky = (units = 'auto') => {\n    switch (units) {\n      case ('f'):\n        return 'us';\n      case ('c'):\n        return 'si';\n      case (''):\n      case ('auto'):\n        return 'auto';\n      default:\n        throw new Error(`Invalid Unit type: ${units}`);\n    }\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { format } from 'date-fns';\nimport classNames from 'classnames';\n\nimport { MIN_CHANCE_OF_RAIN } from 'app/constants';\n\n\nexport const PRECIP_HOUR_LIMIT = 23;\n\nexport default class TodaysRainForecast extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    hourlyForecasts: T.arrayOf(\n      T.shape({\n        precipProbability: T.number,\n        time: T.number,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    hourlyForecasts: [],\n  }\n\n  getFirstRainForecast = () => {\n    const { hourlyForecasts } = this.props;\n    return hourlyForecasts\n      .slice(0, PRECIP_HOUR_LIMIT)\n      .find(hourlyForecast => (\n        hourlyForecast.precipProbability >= MIN_CHANCE_OF_RAIN\n      )) || {};\n  }\n\n  render() {\n    const { className } = this.props;\n    const firstRainForecast = this.getFirstRainForecast();\n    const { precipProbability, time } = firstRainForecast;\n\n    return (\n      <div className={classNames(className, 'rain-chance', 'mb-3')}>\n        { precipProbability ? (\n          <>\n            <div className=\"umbrella bring-umbrella\" />\n            <span className=\"pop text-info\">\n              {(precipProbability * 100).toFixed(0)}%\n            </span>\n            <sup className=\"at mx-1\">@</sup>\n            <span className=\"time\">{format(new Date(time * 1000), 'ha')}</span>\n          </>\n        ) : (\n          <>\n            <div className=\"umbrella no-umbrella\" />\n            <div className=\"no-rain\">No rain in 24hr.</div>\n          </>\n        )}\n        <div className=\"text-muted\">\n          Based on a {(MIN_CHANCE_OF_RAIN * 100).toFixed(0)}% chance threshold.\n        </div>\n      </div>\n    );\n  }\n}\n","export const WARNING_AFTER_N_MISSED_CALLS = 2;\n\nexport const MIN_CHANCE_OF_RAIN = 0.30; // 30% chance\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\n// July 2019: DarkSky's icon mapping is pretty dumb right now:\n// \"The only case where a daily icon will show a *-night value is partly-cloudy-night\"\n\nconst DARK_SKY_ICON_MAP = {\n  'clear-day': 'clear',\n  'clear-night': 'clear',\n  cloudy: 'cloudy',\n  fog: 'fog',\n  'partly-cloudy-day': 'partlycloudy',\n  'partly-cloudy-night': 'partlycloudy',\n  rain: 'rain',\n  sleet: 'sleet',\n  snow: 'snow',\n  wind: 'wind',\n};\n\nexport const getIcon = iconName => (\n  `./images/weather-icons/${DARK_SKY_ICON_MAP[iconName] || 'unknown'}.svg`\n);\n\n\nexport default class WeatherIcon extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    icon: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n    icon: '',\n  }\n\n  render() {\n    const { className, icon } = this.props;\n\n    if (!icon) { return null; }\n\n    return (\n      <img className={classNames(className)} src={getIcon(icon)} alt=\"\" />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\nimport LocalStorage, { WEATHER_UNITS_KEY } from 'app/utils/local_storage';\n\nimport WeatherIcon from '../../icon';\n\n\nexport const cToF = celsius => ((celsius * 9) / 5) + 32;\nexport const fToC = fahrenheit => ((fahrenheit - 32) * 5) / 9;\n\n\nexport default class TodaysForecastOverview extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    todaysForecast: T.shape({\n      icon: T.string,\n      summary: T.string,\n      temperatureMin: T.number,\n      temperatureMax: T.number,\n    }),\n  };\n\n  static defaultProps = {\n    className: '',\n    todaysForecast: {},\n  }\n\n  constructor(props) {\n    super(props);\n    this.weatherUnits = LocalStorage.get(WEATHER_UNITS_KEY);\n  }\n\n  getAltHighLow = () => {\n    const { weatherUnits, props } = this;\n    const { temperatureMin, temperatureMax } = props.todaysForecast;\n\n    if (!weatherUnits) { return null; }\n\n    const fn = weatherUnits === 'f' ? fToC : cToF;\n\n    return (\n      <div className=\"high-low-alt text-muted\">\n        {fn(temperatureMin).toFixed(0)}\n        /\n        {fn(temperatureMax).toFixed(0)}\n        &deg;\n        {weatherUnits === 'f' ? 'C' : 'F'}\n      </div>\n    );\n  }\n\n  render() {\n    const { className, todaysForecast } = this.props;\n    const { icon, summary, temperatureMin, temperatureMax } = todaysForecast;\n\n    return (\n      <div\n        className={classNames(\n          className, 'forecast', 'mb-3', 'd-flex', 'align-items-center', 'justify-content-center',\n        )}\n      >\n        <WeatherIcon icon={icon} />\n        <div className=\"text-truncate\">\n          <div className=\"conditions text-truncate\">\n            {summary}\n          </div>\n\n          <div className=\"high-low\">\n            {temperatureMin.toFixed(0)}\n            <span className=\"text-muted px-1\">/</span>\n            {temperatureMax.toFixed(0)}\n            &deg;\n          </div>\n\n          {this.getAltHighLow()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\n\nexport default class Alerts extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    alerts: T.arrayOf(\n      T.shape({\n        title: T.string,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    alerts: [],\n  }\n\n  render() {\n    const { className, alerts } = this.props;\n\n    if (!alerts.length) { return null; }\n\n    return (\n      <div className={classNames(className, 'alerts')}>\n        <ul>\n          {alerts.map(alert => (\n            <li key={alert.title}>{alert.title}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\n\nimport TodaysRainForecast from './todays_rain_forecast';\nimport TodaysForecastOverview from './todays_forecast_overview';\nimport Alerts from './alerts';\n\n\nexport default class SidePanel extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    dailyForecasts: T.array,\n    hourlyForecasts: T.array,\n    alerts: T.array,\n  };\n\n  static defaultProps = {\n    className: '',\n    dailyForecasts: [],\n    hourlyForecasts: [],\n    alerts: [],\n  }\n\n  render() {\n    const { className, dailyForecasts, hourlyForecasts, alerts } = this.props;\n\n    return (\n      <div className={classNames(className, 'side-panel px-3')}>\n        <TodaysForecastOverview todaysForecast={dailyForecasts[0]} />\n        <TodaysRainForecast hourlyForecasts={hourlyForecasts} />\n        <Alerts alerts={alerts} />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Table } from 'reactstrap';\nimport { format } from 'date-fns';\nimport classNames from 'classnames';\n\nimport { MIN_CHANCE_OF_RAIN } from 'app/constants';\n\nimport WeatherIcon from '../icon';\n\n\nexport default class HourlyForecast extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    hourlyForecasts: T.arrayOf(\n      T.shape({\n        time: T.number,\n        temperature: T.number,\n        uvIndex: T.number,\n        humidity: T.number,\n        precipProbability: T.number,\n        apparentTemperature: T.number,\n        icon: T.string,\n        summary: T.string,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    hourlyForecasts: [],\n  }\n\n  render() {\n    const { className, hourlyForecasts } = this.props;\n\n    return (\n      <Table className=\"mb-0\">\n        <thead>\n          <tr>\n            <th>Time</th>\n            <th>Condition</th>\n            <th data-toggle=\"tooltip\" title=\"Temp/Feels Like\">Temp/FL</th>\n            <th>UVI</th>\n            <th>POP</th>\n            <th>Humid</th>\n          </tr>\n        </thead>\n        <tbody>\n          {hourlyForecasts.slice(0, 12).map(hourlyForecast => {\n            const {\n              time,\n              temperature,\n              uvIndex,\n              humidity,\n              precipProbability,\n              apparentTemperature,\n              icon,\n              summary,\n            } = hourlyForecast;\n\n            return (\n              <tr key={`hourly-forecast-${time}`}>\n                <td>\n                  {format(new Date(time * 1000), 'ha')}\n                </td>\n                <td>\n                  <WeatherIcon icon={icon} /> {summary}\n                </td>\n                <td>\n                  {temperature.toFixed(0)}/{apparentTemperature.toFixed(0)}&deg;\n                </td>\n                <td>\n                  {uvIndex}\n                </td>\n                <td\n                  className={classNames(\n                    className, { 'text-info': precipProbability >= MIN_CHANCE_OF_RAIN },\n                  )}\n                >\n                  {(precipProbability * 100).toFixed(0)}%\n                </td>\n                <td>\n                  {(humidity * 100).toFixed(0)}%\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport { format } from 'date-fns';\nimport classNames from 'classnames';\n\nimport WeatherIcon from '../icon';\n\n\nexport default class ThreeDayForecast extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    dailyForecasts: T.arrayOf(\n      T.shape({\n        icon: T.string,\n        summary: T.string,\n        temperatureMin: T.number,\n        temperatureMax: T.number,\n        time: T.number,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    className: '',\n    dailyForecasts: [],\n  }\n\n  render() {\n    const { className, dailyForecasts } = this.props;\n\n    return (\n      <Row className={classNames(className, 'slim-gutters', 'forecasts')}>\n        {/* gets indexes 1, 2, 3 of the array */}\n        {dailyForecasts.slice(1, 4).map(dailyForecast => {\n          const { summary, temperatureMin, temperatureMax, time, icon } = dailyForecast;\n\n          return (\n            <Col sm=\"4\" key={`daily-forecast-${time}`}>\n              <div className=\"p-3 forecast d-flex align-items-center justify-content-center\">\n                <WeatherIcon icon={icon} />\n                <div className=\"text-truncate\">\n                  <div className=\"conditions text-truncate\">\n                    {summary}\n                  </div>\n                  <div className=\"high-low\">\n                    {temperatureMin.toFixed(0)}\n                    <span className=\"text-muted px-1\">/</span>\n                    {temperatureMax.toFixed(0)}\n                  </div>\n                  <div className=\"date\">\n                    {format(new Date(time * 1000), 'EEEE, LLL d')}\n                  </div>\n                </div>\n              </div>\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport LocalStorage, { WEATHER_KEY_KEY, WEATHER_UNITS_KEY } from 'app/utils/local_storage';\nimport { WARNING_AFTER_N_MISSED_CALLS } from 'app/constants';\nimport DarkSky from 'app/integrations/darksky';\nimport TimeSinceLastUpdated from 'app/components/time_since_last_updated';\nimport ErrorMessage from 'app/components/error_message';\n\nimport SidePanel from './side_panel';\nimport HourlyForecast from './hourly_forecast';\nimport ThreeDayForecast from './three_day_forecast';\n\n\nexport const CALL_INTERVAL = 15 * 60 * 1000;\nexport const MS_UNTIL_WARNING = CALL_INTERVAL * WARNING_AFTER_N_MISSED_CALLS;\nexport const LOCATIONS = [\n  { readable: 'Bernal Heights', lat: 37.7448205, long: -122.4100494 },\n];\n\nexport default class Weather extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [],\n      fetchError: false,\n      lastUpdated: undefined,\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    await this.updateWeatherLocations();\n    this.interval = setInterval(this.updateWeatherLocations, CALL_INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  updateWeatherLocations = async () => {\n    const key = LocalStorage.get(WEATHER_KEY_KEY);\n    const units = LocalStorage.get(WEATHER_UNITS_KEY);\n    try {\n      const locationsResponses = await DarkSky.fetchAllLocationsWeatherData(LOCATIONS, key, units);\n\n      this.setState({ loading: true });\n      this.setState({\n        locations: locationsResponses.map((locationResponse, idx) => {\n          const { hourly, daily, alerts } = locationResponse.data;\n\n          return {\n            dailyForecasts: daily.data,\n            hourlyForecasts: hourly.data,\n            alerts,\n            ...LOCATIONS[idx],\n          };\n        }),\n        lastUpdated: new Date(),\n        fetchError: false,\n        loading: false,\n      });\n    } catch (e) {\n      console.error(e);\n      // jsonp makes error handling difficult. just assume it was user error\n      this.setState({\n        fetchError: true,\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { className } = this.props;\n    const { locations, lastUpdated, fetchError, loading } = this.state;\n\n    return (\n      <div className={classNames(className, 'weather')}>\n        {fetchError && (\n          <ErrorMessage>\n            Weather request failed. Make sure {'you\\'ve'} supplied an API Key in the{' '}\n            <a href=\"#/settings\">settings</a>.\n          </ErrorMessage>\n        )}\n\n        {locations.map(location => {\n          const {\n            hourlyForecasts,\n            dailyForecasts,\n            alerts,\n            readable,\n            lat,\n            long,\n          } = location;\n\n          return (\n            <Card className=\"mb-2\" key={`${lat},${long}`}>\n              <CardHeader className=\"text-center py-1 text-uppercase\">\n                {readable}\n              </CardHeader>\n\n              <CardBody>\n                <Row className=\"slim-gutters\">\n                  <Col md=\"5\">\n                    <SidePanel\n                      dailyForecasts={dailyForecasts}\n                      hourlyForecasts={hourlyForecasts}\n                      alerts={alerts}\n                    />\n                  </Col>\n                  <Col md=\"7\">\n                    <HourlyForecast\n                      hourlyForecasts={hourlyForecasts}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter className=\"bg-transparent py-0\">\n                <ThreeDayForecast dailyForecasts={dailyForecasts} />\n              </CardFooter>\n            </Card>\n          );\n        })}\n\n        <div className=\"d-flex justify-content-end\">\n          <TimeSinceLastUpdated\n            lastUpdated={lastUpdated}\n            msUntilWarning={MS_UNTIL_WARNING}\n            loading={loading}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport { format } from 'date-fns';\nimport classNames from 'classnames';\n\n\nexport const INTERVAL_MS = 1000;\n\nexport default class CurrentDateTimeHeader extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.forceUpdate(), INTERVAL_MS);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { className } = this.props;\n\n    const now = new Date();\n    const date = format(now, 'MMMM do, yyy');\n    const time = format(now, 'h:mm');\n\n    return (\n      <Row className={classNames(className, 'current-time', 'py-3', 'py-md-1', 'align-items-baseline')}>\n        <Col xs=\"6\" className=\"time\">\n          {time}\n        </Col>\n        <Col xs=\"6\" className=\"date\">\n          {date}\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport Bus from 'app/components/bus';\nimport Weather from 'app/components/weather';\n\nimport CurrentDateTimeHeader from './current_datetime_header';\n\n\nexport default class MainPage extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={classNames(className)}>\n        <CurrentDateTimeHeader />\n        <Row className=\"slim-gutters\">\n          <Col lg=\"5\" className=\"mb-4\">\n            <Bus />\n          </Col>\n          <Col lg=\"7\" className=\"mb-4\">\n            <Weather />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport { Button, ButtonGroup, Label } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport LocalStorage, { HTML_CLASS_KEY } from 'app/utils/local_storage';\n\n\nexport const MODES = {\n  DARK: 'dark-mode',\n  LIGHT: 'light-mode',\n};\n\nexport default class DarkLightModeSelector extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.setMode = this.setMode.bind(this);\n  }\n\n  setMode = mode => {\n    document.documentElement.className = mode;\n    LocalStorage.set(HTML_CLASS_KEY, mode);\n    // this is because we aren't using state to determine if we are in dark mode\n    this.forceUpdate();\n  }\n\n  isDarkModeSelected = () => (\n    document.documentElement.className === MODES.DARK\n  )\n\n  render() {\n    const { className } = this.props;\n\n    const isDarkModeSelected = this.isDarkModeSelected();\n\n    return (\n      <>\n        <Label className=\"mr-2\">Theme:</Label>\n        <ButtonGroup className={classNames(className)}>\n          <Button\n            onClick={() => this.setMode(MODES.DARK)}\n            color={isDarkModeSelected ? 'primary' : 'secondary'}\n          >\n            Dark\n          </Button>\n          <Button\n            onClick={() => this.setMode(MODES.LIGHT)}\n            color={isDarkModeSelected ? 'secondary' : 'primary'}\n          >\n            Light\n          </Button>\n        </ButtonGroup>\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { monokai } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\n\nimport LocalStorage, { ALL_SETTINGS_KEYS } from 'app/utils/local_storage';\n\n\nexport default class DisplayLocalStorageData extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    localStorageKey: T.oneOf(ALL_SETTINGS_KEYS).isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('storage', this.rerender);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('storage', this.rerender);\n  }\n\n  // this only exists for the event listeners above to have a single fn to point to\n  rerender = () => this.forceUpdate();\n\n  getLocalStorageData = key => (\n    LocalStorage.get(key)\n  )\n\n  toggleShow = () => {\n    const { show } = this.state;\n    this.setState({ show: !show });\n  }\n\n  render() {\n    const { className, localStorageKey } = this.props;\n    const { show } = this.state;\n    const codeString = JSON.stringify(this.getLocalStorageData(localStorageKey));\n\n    return (\n      <div className={classNames(className)}>\n        <p>\n          <Button color=\"primary\" onClick={this.toggleShow}>\n            {!show ? 'Show' : 'Hide'} LocalStorage Data\n          </Button>\n        </p>\n        <p className=\"small\">JSON representation of the stored data.</p>\n        {show && (\n          <SyntaxHighlighter language=\"json\" style={monokai} className=\"my-3\">\n            {codeString}\n          </SyntaxHighlighter>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\n\nimport LocalStorage, { SAMPLE_DATA } from 'app/utils/local_storage';\n\n\nexport default class SetSampleLocalStorageData extends PureComponent {\n  static propTypes = {\n    className: T.string,\n    localStorageKey: T.oneOf(Object.keys(SAMPLE_DATA)).isRequired,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  setSampleData = () => {\n    const { localStorageKey } = this.props;\n    LocalStorage.setSampleData(localStorageKey);\n  }\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={classNames(className)}>\n        <p>\n          <Button color=\"primary\" onClick={this.setSampleData}>\n            Set Sample LocalStorage Data\n          </Button>\n        </p>\n        <p className=\"small\">Replace stored data with sample data.</p>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ButtonGroup,\n  Button,\n} from 'reactstrap';\nimport classNames from 'classnames';\n\nimport LocalStorage, {\n  BUS_ROUTE_STOP_TAGS_KEY,\n  WEATHER_KEY_KEY,\n  WEATHER_UNITS_KEY,\n} from 'app/utils/local_storage';\nimport DarkSky from 'app/integrations/darksky';\n\nimport DarkLightModeSelector from './dark_light_mode_selector';\nimport DisplayLocalStorageData from './display_local_storage_data';\nimport SetSampleLocalStorageData from './set_sample_local_storage_data';\n\n\nexport default class Settings extends PureComponent {\n  static propTypes = {\n    className: T.string,\n  };\n\n  static defaultProps = {\n    className: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n\n  getInitialState = () => ({\n    weatherKeyIsValid: undefined,\n    weatherKeyValue: LocalStorage.get(WEATHER_KEY_KEY),\n    weatherUnits: LocalStorage.get(WEATHER_UNITS_KEY),\n  })\n\n  onWeatherKeyChange = event => {\n    this.setState({ weatherKeyValue: event.target.value });\n  }\n\n  validateAndSetKey = async event => {\n    event.preventDefault();\n    const { weatherKeyValue } = this.state;\n\n    try {\n      if (await DarkSky.isValidKey(weatherKeyValue)) {\n        this.setState({ weatherKeyIsValid: true });\n        LocalStorage.set(WEATHER_KEY_KEY, weatherKeyValue);\n        return;\n      }\n      this.setState({ weatherKeyIsValid: false });\n    } catch (e) {\n      this.setState({ weatherKeyIsValid: false });\n    }\n  }\n\n  setWeatherUnits = units => {\n    this.setState({ weatherUnits: units });\n    LocalStorage.set(WEATHER_UNITS_KEY, units);\n  }\n\n  dumpLocalStorageAndResetState = () => {\n    this.setState(this.getInitialState());\n    LocalStorage.dump();\n  }\n\n  render() {\n    const { className } = this.props;\n    const { weatherKeyIsValid, weatherKeyValue, weatherUnits } = this.state;\n\n    return (\n      <div className={classNames(className)}>\n        <h1>Settings</h1>\n\n        <Row>\n          <Col xs=\"6\">\n            <Card className=\"mb-4\">\n              <CardHeader>\n                <h3 className=\"m-0\">Global</h3>\n              </CardHeader>\n              <CardBody>\n                <DarkLightModeSelector />\n\n                <hr />\n\n                <p>\n                  <Button\n                    color=\"danger\"\n                    onClick={this.dumpLocalStorageAndResetState}\n                  >\n                    Dump All Local Storage\n                  </Button>\n                </p>\n                <p className=\"small\">\n                  This will remove stored bus stops, your DarkSky key, and the weather units.\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"6\">\n            <Card className=\"mb-4\">\n              <CardHeader>\n                <h3 className=\"m-0\">Bus</h3>\n              </CardHeader>\n              <CardBody>\n                <DisplayLocalStorageData localStorageKey={BUS_ROUTE_STOP_TAGS_KEY} />\n\n                <hr />\n\n                <SetSampleLocalStorageData localStorageKey={BUS_ROUTE_STOP_TAGS_KEY} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"6\">\n            <Card className=\"mb-4\">\n              <CardHeader>\n                <h3 className=\"m-0\">Weather</h3>\n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={this.validateAndSetKey}>\n                  <FormGroup>\n                    <Label for=\"weather-key\">DarkSky API Key:</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"weather-key\"\n                      className={classNames(\n                        {\n                          'is-valid': weatherKeyIsValid,\n                          'is-invalid': weatherKeyIsValid === false,\n                        },\n                      )}\n                      onChange={this.onWeatherKeyChange}\n                      value={weatherKeyValue}\n                    />\n                  </FormGroup>\n                  <Button color=\"primary\" type=\"submit\">Validate & Store Key</Button>\n                </Form>\n\n                <hr />\n\n                <FormGroup>\n                  <Label className=\"mr-2\">Weather Units:</Label>\n                  <ButtonGroup>\n                    <Button\n                      color={weatherUnits === '' ? 'primary' : 'secondary'}\n                      onClick={() => this.setWeatherUnits('')}\n                    >\n                      Auto\n                    </Button>\n                    <Button\n                      color={weatherUnits === 'f' ? 'primary' : 'secondary'}\n                      onClick={() => this.setWeatherUnits('f')}\n                    >\n                      F\n                    </Button>\n                    <Button\n                      color={weatherUnits === 'c' ? 'primary' : 'secondary'}\n                      onClick={() => this.setWeatherUnits('c')}\n                    >\n                      C\n                    </Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport MainNav from 'app/components/main_nav';\nimport MainPage from 'app/components/main_page';\nimport SettingsPage from 'app/components/settings_page';\n\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Container>\n        <MainNav />\n\n        <Switch>\n          <Route path=\"/settings\">\n            <SettingsPage />\n          </Route>\n          <Route path=\"/\">\n            <MainPage />\n          </Route>\n        </Switch>\n      </Container>\n    </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.scss';\n\nimport App from 'app';\n\n\nconst DOM_ID = 'react-app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(DOM_ID),\n);\n"],"sourceRoot":""}